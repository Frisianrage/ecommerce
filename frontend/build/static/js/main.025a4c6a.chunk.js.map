{"version":3,"sources":["constants/productConstants.js","constants/cartConstants.js","constants/userConstants.js","constants/orderConstants.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/userReducers.js","reducers/orderReducers.js","actions/userActions.js","components/SearchBox.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","components/Loader.js","components/Message.js","components/Paginate.js","actions/productActions.js","components/ProductCarousel.js","components/Meta.js","screens/HomeScreen.js","screens/Productscreen.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderActions.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/OrderScreen.js","screens/OrderListScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","App.js","reportWebVitals.js","index.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_CREATE_REVIEW_RESET","PRODUCT_TOP_REQUEST","PRODUCT_TOP_SUCCESS","PRODUCT_TOP_FAIL","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","USER_LOGIN_SUCCESS","USER_LOGIN_REQUEST","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_SUCCESS","USER_REGISTER_REQUEST","USER_REGISTER_FAIL","USER_DETAILS_SUCCESS","USER_DETAILS_REQUEST","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","USER_LIST_SUCCESS","USER_LIST_REQUEST","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_SUCCESS","USER_DELETE_REQUEST","USER_DELETE_FAIL","USER_UPDATE_SUCCESS","USER_UPDATE_REQUEST","USER_UPDATE_FAIL","USER_UPDATE_RESET","ORDER_CREATE_SUCCESS","ORDER_CREATE_REQUEST","ORDER_CREATE_FAIL","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_REQUEST","ORDER_DETAILS_FAIL","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_RESET","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","ORDER_LIST_SUCCESS","ORDER_LIST_REQUEST","ORDER_LIST_FAIL","ORDER_LIST_RESET","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_REQUEST","ORDER_DELIVER_FAIL","ORDER_DELIVER_RESET","reducer","combineReducers","productList","state","products","action","type","loading","payload","pages","page","error","productDetails","product","reviews","productDelete","success","productCreate","productUpdate","productReviewCreate","productTopRated","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","userList","users","userDelete","userUpdate","orderCreate","order","orderDetails","orderItems","orderPay","orderDeliver","orderListMy","orders","orderList","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","inititalState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","getUserProfile","id","dispatch","getState","a","config","headers","Authorization","token","axios","get","data","response","message","SearchBox","history","useState","keyword","setKeyword","Form","onSubmit","e","preventDefault","trim","push","inline","Control","name","onChange","target","value","placeholder","className","Button","variant","Header","useDispatch","useSelector","Navbar","bg","expand","collapseOnSelect","Container","to","Brand","Toggle","aria-controls","Collapse","render","Nav","Link","NavDropdown","title","Item","onClick","removeItem","isAdmin","Footer","Row","Col","Rating","text","color","style","defaultProps","Product","Card","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","price","Loader","Spinner","animation","role","width","height","margin","display","Message","children","Alert","Paginate","Pagination","Array","keys","active","listProducts","pageNumber","listProductDetails","ProductCarousel","useEffect","Carousel","pause","Image","alt","fluid","Caption","Meta","description","keywords","Helmet","content","Homescreen","match","params","sm","md","lg","xl","Productscreen","qty","setQty","setRating","comment","setComment","successProductReview","errorProductReview","alert","varaint","ListGroup","countInStock","disabled","length","review","createdAt","substring","productId","post","Group","controlId","Label","row","addToCart","setItem","stringify","CartScreen","location","search","Number","split","removeFromCartHandler","removeFromCart","rounded","reduce","acc","toFixed","FormContainer","xs","LoginScreen","email","setEmail","password","setPassword","redirect","login","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","loadingOrders","errorOrders","put","updateUserProfile","Table","striped","bordered","hover","responsive","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","required","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","addDecimals","num","Math","round","itemsPrice","shippingPrice","taxPrice","index","createOrder","ProductListScreen","loadingDelete","errorDelete","successDelete","loadingCreate","errorCreate","successCreate","createdProduct","deletHandler","window","confirm","delete","deleteProduct","brand","category","ProductEditScreen","setBrand","setImage","setPrice","setDescription","setCountInStock","setCategory","uploading","setUploading","loadingUpdate","errorUpdate","successUpdate","uploadFileHandler","file","files","formData","FormData","append","console","log","updateProduct","File","custom","OrderScreen","orderId","sdkReady","setSdkReady","loadingPay","successPay","loadingDeliver","successDeliver","addPayPalScript","clientId","script","document","createElement","async","onload","body","appendChild","href","amount","onSuccess","paymentResult","payOrder","deliverOrder","OrderListScreen","UserListScreen","deleteUser","UserEditScreen","userId","setIsAdmin","updateUser","App","path","component","exact","ProductScreen","ProfileScreen","HomeScreen","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getElementById"],"mappings":"uLAAaA,EAAuB,uBACvBC,EAAuB,uBACvBC,EAAoB,oBAEpBC,EAA0B,0BAC1BC,EAA0B,0BAC1BC,EAAuB,uBAEvBC,EAAyB,yBACzBC,EAAyB,yBACzBC,EAAsB,sBAEtBC,EAAyB,yBACzBC,EAAyB,yBACzBC,EAAsB,sBACtBC,EAAuB,uBAEvBC,EAAyB,yBACzBC,EAAyB,yBACzBC,EAAsB,sBACtBC,EAAuB,uBAEvBC,EAAgC,gCAChCC,EAAgC,gCAChCC,EAA6B,6BAC7BC,EAA8B,8BAE9BC,EAAsB,sBACtBC,EAAsB,sBACtBC,EAAmB,mB,QC7BnBC,EAAgB,gBAChBC,EAAmB,mBACnBC,EAA6B,6BAC7BC,EAA2B,2BCH3BC,EAAqB,qBACrBC,EAAqB,qBACrBC,EAAkB,kBAClBC,EAAc,cAEdC,EAAwB,wBACxBC,EAAwB,wBACxBC,EAAqB,qBAErBC,EAAuB,uBACvBC,EAAuB,uBACvBC,EAAoB,oBACpBC,EAAqB,qBAErBC,EAA8B,8BAC9BC,EAA8B,8BAC9BC,GAA2B,2BAC3BC,GAA4B,4BAE5BC,GAAoB,oBACpBC,GAAoB,oBACpBC,GAAiB,iBACjBC,GAAkB,kBAElBC,GAAsB,sBACtBC,GAAsB,sBACtBC,GAAmB,mBAEnBC,GAAsB,sBACtBC,GAAsB,sBACtBC,GAAmB,mBACnBC,GAAoB,oBC/BpBC,GAAuB,uBACvBC,GAAuB,uBACvBC,GAAoB,oBAEpBC,GAAwB,wBACxBC,GAAwB,wBACxBC,GAAqB,qBAErBC,GAAoB,oBACpBC,GAAiB,iBACjBC,GAAoB,oBACpBC,GAAkB,kBAElBC,GAAwB,wBACxBC,GAAwB,wBACxBC,GAAqB,qBACrBC,GAAsB,sBAEtBC,GAAqB,qBACrBC,GAAqB,qBACrBC,GAAkB,kBAClBC,GAAmB,mBAEnBC,GAAwB,wBACxBC,GAAwB,wBACxBC,GAAqB,qBACrBC,GAAsB,sBClB7BC,GAAUC,0BAAgB,CAC5BC,YCP8B,WAAqC,IAApCC,EAAmC,uDAA3B,CAACC,SAAU,IAAKC,EAAW,uCAClE,OAAOA,EAAOC,MACV,KAAKlF,EACD,MAAO,CAACmF,SAAS,EAAMH,SAAU,IACrC,KAAK/E,EACD,MAAO,CAACkF,SAAS,EAAOH,SAAUC,EAAOG,QAAQJ,SAAUK,MAAOJ,EAAOG,QAAQC,MAAOC,KAAML,EAAOG,QAAQE,MACjH,KAAKpF,EACD,MAAO,CAACiF,SAAS,EAAOI,MAAON,EAAOG,SAC1C,QAAS,OAAOL,IDApBS,eCIiC,WAAgD,IAA/CT,EAA8C,uDAAtC,CAACU,QAAS,CAAEC,QAAS,KAAMT,EAAW,uCAChF,OAAOA,EAAOC,MACV,KAAK/E,EACD,OAAO,aAACgF,SAAS,GAASJ,GAC9B,KAAK3E,EACD,MAAO,CAAC+E,SAAS,EAAOM,QAASR,EAAOG,SAC5C,KAAK/E,EACD,MAAO,CAAC8E,SAAS,EAAOI,MAAON,EAAOG,SAC1C,QAAS,OAAOL,IDXpBY,cCegC,WAAyB,IAAxBZ,EAAuB,uDAAf,GAAIE,EAAW,uCACxD,OAAOA,EAAOC,MACV,KAAK5E,EACD,MAAO,CAAC6E,SAAS,GACrB,KAAK5E,EACD,MAAO,CAAC4E,SAAS,EAAOS,SAAS,GACrC,KAAKpF,EACD,MAAO,CAAC2E,SAAS,EAAOI,MAAON,EAAOG,SAC1C,QAAS,OAAOL,IDtBpBc,cC0BgC,WAAyB,IAAxBd,EAAuB,uDAAf,GAAIE,EAAW,uCACxD,OAAOA,EAAOC,MACV,KAAKzE,EACD,MAAO,CAAC0E,SAAS,GACrB,KAAKzE,EACD,MAAO,CAACyE,SAAS,EAAOS,SAAS,EAAMH,QAASR,EAAOG,SAC3D,KAAKzE,EACD,MAAO,CAACwE,SAAS,EAAOI,MAAON,EAAOG,SAC1C,KAAKxE,EACD,MAAO,GACX,QAAS,OAAOmE,IDnCpBe,cCuCgC,WAAqC,IAApCf,EAAmC,uDAA3B,CAAEU,QAAS,IAAKR,EAAW,uCACpE,OAAOA,EAAOC,MACV,KAAKrE,EACD,MAAO,CAACsE,SAAS,GACrB,KAAKrE,EACD,MAAO,CAACqE,SAAS,EAAOS,SAAS,EAAMH,QAASR,EAAOG,SAC3D,KAAKrE,EACD,MAAO,CAACoE,SAAS,EAAOI,MAAON,EAAOG,SAC1C,KAAKpE,EACD,MAAO,CAAEyE,QAAS,IACtB,QAAS,OAAOV,IDhDpBgB,oBCoDsC,WAA0B,IAAzBhB,EAAwB,uDAAhB,GAAKE,EAAW,uCAC/D,OAAOA,EAAOC,MACV,KAAKjE,EACD,MAAO,CAACkE,SAAS,GACrB,KAAKjE,EACD,MAAO,CAACiE,SAAS,EAAOS,SAAS,GACrC,KAAKzE,EACD,MAAO,CAACgE,SAAS,EAAOI,MAAON,EAAOG,SAC1C,KAAKhE,EACD,MAAO,GACX,QAAS,OAAO2D,ID7DpBiB,gBCiEkC,WAAuC,IAAtCjB,EAAqC,uDAA7B,CAAEC,SAAU,IAAMC,EAAW,uCACxE,OAAOA,EAAOC,MACV,KAAK7D,EACD,MAAO,CAAC8D,SAAS,EAAMH,SAAU,IACrC,KAAK1D,EACD,MAAO,CAAC6D,SAAS,EAAOH,SAAUC,EAAOG,SAC7C,KAAK7D,EACD,MAAO,CAAC4D,SAAS,EAAOI,MAAON,EAAOG,SAC1C,QAAS,OAAOL,IDxEpBkB,KEduB,WAA2D,IAA1DlB,EAAyD,uDAAjD,CAACmB,UAAW,GAAIC,gBAAiB,IAAKlB,EAAW,uCACjF,OAAOA,EAAOC,MACV,KAAK1D,EACD,IAAM4E,EAAOnB,EAAOG,QAEdiB,EAAYtB,EAAMmB,UAAUI,MAAK,SAAAC,GAAC,OAAIA,EAAEd,UAAYW,EAAKX,WAE/D,OAAGY,EACQ,2BACAtB,GADP,IAEImB,UAAWnB,EAAMmB,UAAUM,KAAI,SAAAD,GAAC,OAAIA,EAAEd,UAAYY,EAAUZ,QAAUW,EAAOG,OAG1E,2BACAxB,GADP,IAEImB,UAAU,GAAD,mBAAMnB,EAAMmB,WAAZ,CAAuBE,MAG5C,KAAK3E,EACD,OAAO,2BACAsD,GADP,IAEImB,UAAWnB,EAAMmB,UAAUO,QAAO,SAAAF,GAAC,OAAIA,EAAEd,UAAYR,EAAOG,aAEpE,KAAK1D,EACD,OAAO,2BACAqD,GADP,IAEIoB,gBAAiBlB,EAAOG,UAEhC,KAAKzD,EACD,OAAO,2BACAoD,GADP,IAEI2B,cAAezB,EAAOG,UAE9B,QACI,OAAOL,IFnBf4B,UGf4B,WAAyB,IAAxB5B,EAAuB,uDAAf,GAAIE,EAAW,uCACpD,OAAOA,EAAOC,MACV,KAAKrD,EACD,MAAO,CAACsD,SAAS,GACrB,KAAKvD,EACD,MAAO,CAACuD,SAAS,EAAOyB,SAAU3B,EAAOG,SAC7C,KAAKtD,EACD,MAAO,CAACqD,SAAS,EAAOI,MAAON,EAAOG,SAC1C,KAAKrD,EACD,MAAO,GACX,QAAS,OAAOgD,IHMpB8B,aGF+B,WAAyB,IAAxB9B,EAAuB,uDAAf,GAAIE,EAAW,uCACvD,OAAOA,EAAOC,MACV,KAAKjD,EACD,MAAO,CAACkD,SAAS,GACrB,KAAKnD,EACD,MAAO,CAACmD,SAAS,EAAOyB,SAAU3B,EAAOG,SAC7C,KAAKlD,EACD,MAAO,CAACiD,SAAS,EAAOI,MAAON,EAAOG,SAC1C,QAAS,OAAOL,IHLpB+B,YGS8B,WAAiC,IAAhC/B,EAA+B,uDAAvB,CAACgC,KAAM,IAAK9B,EAAW,uCAC9D,OAAOA,EAAOC,MACV,KAAK9C,EACD,OAAO,2BAAI2C,GAAX,IAAkBI,SAAS,IAC/B,KAAKhD,EACD,MAAO,CAACgD,SAAS,EAAO4B,KAAM9B,EAAOG,SACzC,KAAK/C,EACD,MAAO,CAAC8C,SAAS,EAAOI,MAAON,EAAOG,SAC1C,KAAK9C,EACD,MAAO,CAAEyE,KAAM,IACnB,QAAS,OAAOhC,IHlBpBiC,kBGsBoC,WAAyB,IAAxBjC,EAAuB,uDAAf,GAAIE,EAAW,uCAC5D,OAAOA,EAAOC,MACV,KAAK1C,EACD,MAAO,CAAC2C,SAAS,GACrB,KAAK5C,EACD,MAAO,CAAC4C,SAAS,EAAOS,SAAS,EAAMgB,SAAU3B,EAAOG,SAC5D,KAAK3C,GACD,MAAO,CAAC0C,SAAS,EAAOI,MAAON,EAAOG,SAC1C,KAAK1C,GACD,MAAO,GACX,QAAS,OAAOqC,IH/BpBkC,SGmC2B,WAAkC,IAAjClC,EAAgC,uDAAxB,CAACmC,MAAO,IAAKjC,EAAW,uCAC5D,OAAOA,EAAOC,MACV,KAAKtC,GACD,MAAO,CAACuC,SAAS,GACrB,KAAKxC,GACD,MAAO,CAACwC,SAAS,EAAO+B,MAAOjC,EAAOG,SAC1C,KAAKvC,GACD,MAAO,CAACsC,SAAS,EAAOI,MAAON,EAAOG,SAC1C,KAAKtC,GACD,MAAO,CAACoE,MAAO,IACnB,QAAS,OAAOnC,IH5CpBoC,WGgD6B,WAAyB,IAAxBpC,EAAuB,uDAAf,GAAIE,EAAW,uCACrD,OAAOA,EAAOC,MACV,KAAKlC,GACD,MAAO,CAACmC,SAAS,GACrB,KAAKpC,GACD,MAAO,CAACoC,SAAS,EAAOS,SAAS,GACrC,KAAK3C,GACD,MAAO,CAACkC,SAAS,EAAOI,MAAON,EAAOG,SAC1C,QAAS,OAAOL,IHvDpBqC,WG2D6B,WAAiC,IAAhCrC,EAA+B,uDAAvB,CAACgC,KAAM,IAAK9B,EAAW,uCAC7D,OAAOA,EAAOC,MACV,KAAK/B,GACD,MAAO,CAACgC,SAAS,GACrB,KAAKjC,GACD,MAAO,CAACiC,SAAS,EAAOS,SAAS,GACrC,KAAKxC,GACD,MAAO,CAAC+B,SAAS,EAAOI,MAAON,EAAOG,SAC1C,KAAK/B,GACD,MAAO,CAAC0D,KAAM,IAClB,QAAS,OAAOhC,IHpEpBsC,YItB8B,WAAyB,IAAxBtC,EAAuB,uDAAf,GAAIE,EAAW,uCACtD,OAAOA,EAAOC,MACV,KAAK3B,GACD,MAAO,CACH4B,SAAS,GAEjB,KAAK7B,GACD,MAAO,CACH6B,SAAS,EACTS,SAAS,EACT0B,MAAOrC,EAAOG,SAEtB,KAAK5B,GACD,MAAO,CACH2B,SAAS,EACTI,MAAON,EAAOG,SAEtB,QACI,OAAOL,IJKfwC,aID+B,WAA2E,IAA1ExC,EAAyE,uDAAjE,CAACI,SAAS,EAAMqC,WAAY,GAAIrB,gBAAiB,IAAKlB,EAAW,uCACzG,OAAOA,EAAOC,MACV,KAAKxB,GACD,OAAO,2BACAqB,GADP,IAEII,SAAS,IAEjB,KAAK1B,GACD,MAAO,CACH0B,SAAS,EACTmC,MAAOrC,EAAOG,SAEtB,KAAKzB,GACD,MAAO,CACHwB,SAAS,EACTI,MAAON,EAAOG,SAEtB,QACI,OAAOL,IJhBf0C,SIoB2B,WAAyB,IAAxB1C,EAAuB,uDAAf,GAAIE,EAAW,uCACnD,OAAOA,EAAOC,MACV,KAAKpB,GACD,MAAO,CACHqB,SAAS,GAEjB,KAAKvB,GACD,MAAO,CACHuB,SAAS,EACTS,SAAS,GAEjB,KAAK/B,GACD,MAAO,CACHsB,SAAS,EACTI,MAAON,EAAOG,SAEtB,KAAKrB,GACD,MAAO,GACX,QACI,OAAOgB,IJtCf2C,aI0C+B,WAAyB,IAAxB3C,EAAuB,uDAAf,GAAIE,EAAW,uCACvD,OAAOA,EAAOC,MACV,KAAKT,GACD,MAAO,CACHU,SAAS,GAEjB,KAAKX,GACD,MAAO,CACHW,SAAS,EACTS,SAAS,GAEjB,KAAKlB,GACD,MAAO,CACHS,SAAS,EACTI,MAAON,EAAOG,SAEtB,KAAKT,GACD,MAAO,GACX,QACI,OAAOI,IJ5Df4C,YIgE8B,WAAmC,IAAlC5C,EAAiC,uDAAzB,CAAC6C,OAAQ,IAAK3C,EAAW,uCAChE,OAAOA,EAAOC,MACV,KAAKjB,GACD,MAAO,CACHkB,SAAS,GAEjB,KAAKnB,GACD,MAAO,CACHmB,SAAS,EACTyC,OAAQ3C,EAAOG,SAEvB,KAAKlB,GACD,MAAO,CACHiB,SAAS,EACTI,MAAON,EAAOG,SAEtB,KAAKjB,GACD,MAAO,CACHyD,OAAQ,IAEhB,QACI,OAAO7C,IJpFf8C,UIwF4B,WAAmC,IAAlC9C,EAAiC,uDAAzB,CAAC6C,OAAQ,IAAK3C,EAAW,uCAC9D,OAAOA,EAAOC,MACV,KAAKb,GACD,MAAO,CACHc,SAAS,GAEjB,KAAKf,GACD,MAAO,CACHe,SAAS,EACTyC,OAAQ3C,EAAOG,SAEvB,KAAKd,GACD,MAAO,CACHa,SAAS,EACTI,MAAON,EAAOG,SAEtB,KAAKb,GACD,MAAO,CACHqD,OAAQ,IAEhB,QACI,OAAO7C,MJ1Gb+C,GAAuBC,aAAaC,QAAQ,aAAeC,KAAKC,MAAMH,aAAaC,QAAQ,cAAgB,GAE3GG,GAAsBJ,aAAaC,QAAQ,YAAcC,KAAKC,MAAMH,aAAaC,QAAQ,aAAe,KAIxGI,GAAgB,CAClBnC,KAAM,CAACC,UAAW4B,GAAsB3B,gBAHT4B,aAAaC,QAAQ,mBAAqBC,KAAKC,MAAMH,aAAaC,QAAQ,oBAAsB,IAI/HrB,UAAW,CAAEC,SAAUuB,KAGrBE,GAAa,CAACC,KAILC,GAFDC,sBAAY5D,GAASwD,GAAeK,8BAAoBC,kBAAe,WAAf,EAAmBL,M,iIKsB5EM,GAAiB,SAACC,GAAD,gDAAQ,WAAOC,EAAUC,GAAjB,wBAAAC,EAAA,sEAE9BF,EAAS,CACL3D,KAAM9C,IAHoB,EAQxB0G,IADWlC,EAPa,EAO1BD,UAAaC,SAGToC,EAAS,CACbC,QAAS,CACPC,cAAc,UAAD,OAAYtC,EAASuC,SAZV,SAeTC,KAAMC,IAAN,qBAAwBT,GAAMI,GAfrB,gBAevBM,EAfuB,EAevBA,KAEPT,EAAS,CACL3D,KAAM/C,EACNiD,QAASkE,IAnBiB,kDAuB9BT,EAAS,CACL3D,KAAM7C,EACN+C,QAAS,KAAMmE,UAAY,KAAMA,SAASD,KAAKE,QAAU,KAAMD,SAASD,KAAKE,QAAU,KAAMA,UAzBnE,0DAAR,yD,2BC1CfC,GAtBG,SAAC,GAAe,IAAdC,EAAa,EAAbA,QAAa,EACCC,mBAAS,IADV,oBACtBC,EADsB,KACbC,EADa,KAY7B,OACI,eAACC,GAAA,EAAD,CAAMC,SAVY,SAACC,GACnBA,EAAEC,iBACCL,EAAQM,OACPR,EAAQS,KAAR,kBAAwBP,IAExBF,EAAQS,KAAK,MAKcC,QAAM,EAArC,UACI,cAACN,GAAA,EAAKO,QAAN,CAAcnF,KAAK,OAAOoF,KAAK,IAAIC,SAAU,SAACP,GAAD,OAAOH,EAAWG,EAAEQ,OAAOC,QAAQC,YAAY,qBAAqBC,UAAU,oBAC3H,cAACC,GAAA,EAAD,CAAQ1F,KAAK,SAAS2F,QAAQ,kBAAkBF,UAAU,MAA1D,wBCgDGG,GA1DA,WACX,IAAMjC,EAAWkC,cAGVnE,EADWoE,aAAY,SAAAjG,GAAK,OAAIA,EAAM4B,aACtCC,SAKP,OACI,iCACI,cAACqE,GAAA,EAAD,CAAQC,GAAG,OAAOL,QAAQ,OAAOM,OAAO,KAAKC,kBAAgB,EAA7D,SACI,eAACC,GAAA,EAAD,WACI,cAAC,iBAAD,CAAeC,GAAG,IAAlB,SACI,cAACL,GAAA,EAAOM,MAAR,2BAEJ,cAACN,GAAA,EAAOO,OAAR,CAAeC,gBAAc,qBAC7B,eAACR,GAAA,EAAOS,SAAR,CAAiB9C,GAAG,mBAApB,UACI,cAAC,KAAD,CAAO+C,OAAQ,gBAAEjC,EAAF,EAAEA,QAAF,OAAe,cAAC,GAAD,CAAWA,QAASA,OAClD,eAACkC,GAAA,EAAD,CAAKjB,UAAU,UAAf,UACI,cAAC,iBAAD,CAAeW,GAAG,QAAlB,SACI,eAACM,GAAA,EAAIC,KAAL,WAAU,mBAAGlB,UAAU,yBAAvB,YAEH/D,EACG,eAACkF,GAAA,EAAD,CAAaC,MAAOnF,EAAS0D,KAAM1B,GAAG,WAAtC,UACI,cAAC,iBAAD,CAAe0C,GAAG,WAAlB,SACI,cAACQ,GAAA,EAAYE,KAAb,wBAEJ,cAACF,GAAA,EAAYE,KAAb,CAAkBC,QAtB5B,WAClBpD,GFkFoB,SAACA,GACzBd,aAAamE,WAAW,YACxBrD,EAAS,CACL3D,KAAMnD,IAEV8G,EAAS,CACL3D,KAAM5C,IAEVuG,EAAS,CACL3D,KAAMpC,KAEV+F,EAAS,CACL3D,KAAMf,SEzEsB,uBAKR,cAAC,iBAAD,CAAemH,GAAG,SAAlB,SACI,eAACM,GAAA,EAAIC,KAAL,WAAU,mBAAGlB,UAAU,gBAAvB,eAGH/D,GAAYA,EAASuF,SACnB,eAACL,GAAA,EAAD,CAAaC,MAAM,QAAQnD,GAAG,YAA9B,UACA,cAAC,iBAAD,CAAe0C,GAAG,kBAAlB,SACI,cAACQ,GAAA,EAAYE,KAAb,sBAEJ,cAAC,iBAAD,CAAeV,GAAG,qBAAlB,SACI,cAACQ,GAAA,EAAYE,KAAb,yBAEJ,cAAC,iBAAD,CAAeV,GAAG,mBAAlB,SACI,cAACQ,GAAA,EAAYE,KAAb,wC,mBCpCpBI,GAdA,WACX,OACI,iCACI,cAACf,GAAA,EAAD,UACI,cAACgB,GAAA,EAAD,UACI,cAACC,GAAA,EAAD,CAAK3B,UAAU,mBAAf,iD,UCPd4B,GAAS,SAAC,GAA0B,IAAzB9B,EAAwB,EAAxBA,MAAO+B,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,MAC1B,OACI,sBAAK9B,UAAU,SAAf,UACI,+BACI,mBAAG+B,MAAO,CAACD,SAAQ9B,UAAWF,GAAS,EAAI,cAAgBA,GAAS,GAAM,uBAAyB,kBAEvG,+BACI,mBAAGiC,MAAO,CAACD,SAAQ9B,UAAWF,GAAS,EAAI,cAAgBA,GAAS,IAAM,uBAAyB,kBAEvG,+BACI,mBAAGiC,MAAO,CAACD,SAAQ9B,UAAWF,GAAS,EAAI,cAAgBA,GAAS,IAAM,uBAAyB,kBAEvG,+BACI,mBAAGiC,MAAO,CAACD,SAAQ9B,UAAWF,GAAS,EAAI,cAAgBA,GAAS,IAAM,uBAAyB,kBAEvG,+BACI,mBAAGiC,MAAO,CAACD,SAAQ9B,UAAWF,GAAS,EAAI,cAAgBA,GAAS,IAAM,uBAAyB,kBAEvG,+BAAO+B,GAAQA,QAK3BD,GAAOI,aAAe,CAClBF,MAAO,WAGIF,UCLAK,GAnBC,SAAC,GAAe,IAAdnH,EAAa,EAAbA,QACd,OACI,eAACoH,GAAA,EAAD,CAAMlC,UAAU,mBAAhB,UACI,cAAC,QAAD,CAAMW,GAAE,mBAAc7F,EAAQqH,KAA9B,SACI,cAACD,GAAA,EAAKE,IAAN,CAAUC,IAAKvH,EAAQwH,MAAOpC,QAAQ,UAE1C,eAACgC,GAAA,EAAKK,KAAN,WACA,cAAC,QAAD,CAAM5B,GAAE,mBAAc7F,EAAQqH,KAA9B,SACI,cAACD,GAAA,EAAKM,MAAN,CAAaC,GAAG,MAAhB,SAAsB,iCAAS3H,EAAQ6E,WAE3C,cAACuC,GAAA,EAAKQ,KAAN,CAAWD,GAAI,MAAf,SACI,cAAC,GAAD,CAAQ3C,MAAOhF,EAAQ6H,OAAQd,KAAI,UAAK/G,EAAQ8H,WAAb,gBAEvC,eAACV,GAAA,EAAKQ,KAAN,CAAWD,GAAG,KAAd,cAAqB3H,EAAQ+H,gB,UCP1BC,GARA,WACX,OACI,cAACC,GAAA,EAAD,CAASC,UAAU,SAASC,KAAK,SAASlB,MAAO,CAACmB,MAAM,QAASC,OAAO,QAASC,OAAQ,OAAQC,QAAS,SAA1G,SACI,sBAAMrD,UAAU,UAAhB,2B,UCHNsD,GAAU,SAAC,GAAyB,IAAxBpD,EAAuB,EAAvBA,QAASqD,EAAc,EAAdA,SACvB,OACI,cAACC,GAAA,EAAD,CAAOtD,QAASA,EAAhB,SACKqD,KAKbD,GAAQtB,aAAe,CACnB9B,QAAS,QAGEoD,U,UCGAG,GAdE,SAAC,GAAkD,IAAjD/I,EAAgD,EAAhDA,MAAOC,EAAyC,EAAzCA,KAAyC,IAAnC6G,eAAmC,aAAlBvC,eAAkB,MAAR,GAAQ,EAC/D,OAAOvE,EAAQ,GACX,cAACgJ,GAAA,EAAD,UACK,YAAIC,MAAMjJ,GAAOkJ,QAAQ/H,KAAI,SAAAD,GAAC,OAC3B,cAAC,iBAAD,CAAyB+E,GAAKa,EAAD,6BAAsG5F,EAAE,GAA5FqD,EAAO,kBAAeA,EAAf,iBAA+BrD,EAAE,GAAjC,gBAAkDA,EAAE,GAApG,SACI,cAAC8H,GAAA,EAAWrC,KAAZ,CAAiBwC,OAAQjI,EAAE,IAAMjB,EAAjC,SACKiB,EAAI,KAFOA,EAAE,S,oBCLzBkI,GAAe,eAAC7E,EAAD,uDAAW,GAAI8E,EAAf,uDAA4B,GAA5B,gDAAmC,WAAO7F,GAAP,kBAAAE,EAAA,sEAEvDF,EAAS,CAAC3D,KAAMlF,IAFuC,SAIlCoJ,KAAMC,IAAN,gCAAmCO,EAAnC,uBAAyD8E,IAJvB,gBAIhDpF,EAJgD,EAIhDA,KAEPT,EAAS,CACL3D,KAAMjF,EACNmF,QAASkE,IAR0C,gDAYvDT,EAAS,CACL3D,KAAMhF,EACNkF,QAAS,KAAMmE,UAAY,KAAMA,SAASD,KAAKE,QAAU,KAAMD,SAASD,KAAKE,QAAU,KAAMA,UAd1C,yDAAnC,uDAmBfmF,GAAqB,SAAC/F,GAAD,gDAAQ,WAAOC,GAAP,kBAAAE,EAAA,sEAElCF,EAAS,CAAC3D,KAAM/E,IAFkB,SAIbiJ,KAAMC,IAAN,wBAA2BT,IAJd,gBAI3BU,EAJ2B,EAI3BA,KAEPT,EAAS,CACL3D,KAAM9E,EACNgF,QAASkE,IARqB,gDAYlCT,EAAS,CACL3D,KAAM7E,EACN+E,QAAS,KAAMmE,UAAY,KAAMA,SAASD,KAAKE,QAAU,KAAMD,SAASD,KAAKE,QAAU,KAAMA,UAd/D,yDAAR,uDCYnBoF,GA1BS,WACpB,IAAM/F,EAAWkC,cAEX/E,EAAkBgF,aAAY,SAAAjG,GAAK,OAAIA,EAAMiB,mBAC5Cb,EAA4Ba,EAA5Bb,QAASI,EAAmBS,EAAnBT,MAAOP,EAAYgB,EAAZhB,SAMvB,OAJA6J,qBAAU,WACNhG,ED8IuB,yCAAM,WAAOA,GAAP,kBAAAE,EAAA,sEAE7BF,EAAS,CAAC3D,KAAM7D,IAFa,SAIR+H,KAAMC,IAAI,qBAJF,gBAItBC,EAJsB,EAItBA,KAEPT,EAAS,CACL3D,KAAM5D,EACN8D,QAASkE,IARgB,gDAY7BT,EAAS,CACL3D,KAAM3D,EACN6D,QAAS,KAAMmE,UAAY,KAAMA,SAASD,KAAKE,QAAU,KAAMD,SAASD,KAAKE,QAAU,KAAMA,UAdpE,yDAAN,yDC7IxB,CAACX,IAEG1D,EAAU,cAAC,GAAD,IAAaI,EAAQ,cAAC,GAAD,CAASsF,QAAQ,SAAjB,SAA2BtF,IAC7D,cAACuJ,GAAA,EAAD,CAAUC,MAAM,QAAQpE,UAAU,UAAlC,SACI3F,EAASwB,KAAI,SAACf,GAAD,OACT,cAACqJ,GAAA,EAAS9C,KAAV,UACI,eAAC,QAAD,CAAMV,GAAE,mBAAc7F,EAAQqH,KAA9B,UACI,cAACkC,GAAA,EAAD,CAAOhC,IAAKvH,EAAQwH,MAAOgC,IAAKxJ,EAAQ6E,KAAM4E,OAAK,IACnD,cAACJ,GAAA,EAASK,QAAV,CAAkBxE,UAAU,mBAA5B,SACI,+BAAKlF,EAAQ6E,KAAb,MAAsB7E,EAAQ+H,MAA9B,aAJQ/H,EAAQqH,W,SClBtCsC,GAAO,SAAC,GAAsC,IAApCrD,EAAmC,EAAnCA,MAAOsD,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,SAClC,OACE,eAACC,GAAA,EAAD,WACE,gCAAQxD,IACR,sBAAMzB,KAAK,cAAckF,QAASH,IAClC,sBAAM/E,KAAK,UAAUkF,QAASF,QAKpCF,GAAKzC,aAAe,CAClBZ,MAAO,2BACPsD,YAAa,sCACbC,SAAU,mDAGGF,UCgCAK,GAvCI,SAAC,GAAa,IAAZC,EAAW,EAAXA,MACX9F,EAAU8F,EAAMC,OAAO/F,QAEvB8E,EAAagB,EAAMC,OAAOjB,YAAc,EAExC7F,EAAWkC,cAEXjG,EAAckG,aAAY,SAAAjG,GAAK,OAAIA,EAAMD,eACxCK,EAAyCL,EAAzCK,QAASI,EAAgCT,EAAhCS,MAAOP,EAAyBF,EAAzBE,SAAUK,EAAeP,EAAfO,MAAOC,EAAQR,EAARQ,KAMxC,OAJAuJ,qBAAU,WACNhG,EAAS4F,GAAa7E,EAAS8E,MAChC,CAAC7F,EAAUe,EAAS8E,IAGnB,qCACI,cAAC,GAAD,IACE9E,EAAgC,cAAC,QAAD,CAAM0B,GAAG,IAAIX,UAAU,gBAAvB,qBAAtB,cAAC,GAAD,IACZ,iDACCxF,EACG,cAAC,GAAD,IACEI,EACD,cAAC,GAAD,CAASsF,QAAQ,SAAjB,SAA2BtF,IACxB,qCACA,cAAC8G,GAAA,EAAD,UACKrH,EAASwB,KAAI,SAAAf,GAAO,OACjB,cAAC6G,GAAA,EAAD,CAAuBsD,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAjD,SACI,cAAC,GAAD,CAAStK,QAASA,KADZA,EAAQqH,UAK1B,cAAC,GAAD,CAAUxH,KAAMA,EAAMD,MAAOA,EAAOuE,QAASA,GAAoB,Y,UCkItEoG,GAlKO,SAAC,GAAsB,IAArBtG,EAAoB,EAApBA,QAASgG,EAAW,EAAXA,MAAW,EAClB/F,mBAAS,GADS,oBACjCsG,EADiC,KAC5BC,EAD4B,OAEZvG,mBAAS,GAFG,oBAEjC2D,EAFiC,KAEzB6C,EAFyB,OAGVxG,mBAAS,IAHC,oBAGjCyG,EAHiC,KAGxBC,EAHwB,KAKlCxH,EAAWkC,cAEXvF,EAAiBwF,aAAY,SAAAjG,GAAK,OAAIA,EAAMS,kBAC3CL,EAA2BK,EAA3BL,QAASI,EAAkBC,EAAlBD,MAAOE,EAAWD,EAAXC,QAEjBM,EAAsBiF,aAAY,SAAAjG,GAAK,OAAIA,EAAMgB,uBACvCuK,EAAmDvK,EAA5DH,QAAsC2K,EAAsBxK,EAA7BR,MAG/BqB,EADWoE,aAAY,SAAAjG,GAAK,OAAIA,EAAM4B,aACtCC,SAEPiI,qBAAU,WACHyB,IACCE,MAAM,qBACNL,EAAU,GACVE,EAAW,IACXxH,EAAS,CAAC3D,KAAM9D,KAEpByH,EAAS8F,GAAmBe,EAAMC,OAAO/G,OAC1C,CAACC,EAAU6G,EAAOY,IAWrB,OACI,qCACA,cAAC,QAAD,CAAM3F,UAAU,mBAAmBW,GAAG,IAAtC,qBACCnG,EAAU,cAAC,GAAD,IAAaI,EAAS,cAAC,GAAD,CAASkL,QAAQ,SAAjB,SAA2BlL,IACxD,qCACA,cAAC,GAAD,CAAMwG,MAAOtG,EAAQ6E,OACrB,eAAC+B,GAAA,EAAD,WACA,cAACC,GAAA,EAAD,CAAKuD,GAAI,EAAT,SACI,cAACb,GAAA,EAAD,CAAOhC,IAAKvH,EAAQwH,MAAOgC,IAAKxJ,EAAQ6E,KAAM4E,OAAK,MAEvD,cAAC5C,GAAA,EAAD,CAAKuD,GAAI,EAAT,SACI,eAACa,GAAA,EAAD,CAAW7F,QAAQ,QAAnB,UACI,cAAC6F,GAAA,EAAU1E,KAAX,UACI,6BAAKvG,EAAQ6E,SAEjB,cAACoG,GAAA,EAAU1E,KAAX,UACI,cAAC,GAAD,CAAQvB,MAAOhF,EAAQ6H,OAAQd,KAAI,UAAK/G,EAAQ8H,WAAb,gBAEvC,eAACmD,GAAA,EAAU1E,KAAX,uBACcvG,EAAQ+H,SAEtB,eAACkD,GAAA,EAAU1E,KAAX,2BACkBvG,EAAQ4J,oBAIlC,cAAC/C,GAAA,EAAD,CAAKuD,GAAI,EAAT,SACI,cAAChD,GAAA,EAAD,UACI,eAAC6D,GAAA,EAAD,CAAW7F,QAAQ,QAAnB,UACI,cAAC6F,GAAA,EAAU1E,KAAX,UACI,eAACK,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,qBAGA,cAACA,GAAA,EAAD,UACI,wCAAW7G,EAAQ+H,gBAI/B,cAACkD,GAAA,EAAU1E,KAAX,UACI,eAACK,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,sBAGA,cAACA,GAAA,EAAD,UACK7G,EAAQkL,aAAe,EAAI,oBAAsB,8BAI7DlL,EAAQkL,aAAe,GACpB,cAACD,GAAA,EAAU1E,KAAX,UACI,eAACK,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,kBAGA,cAACA,GAAA,EAAD,UACI,cAACxC,GAAA,EAAKO,QAAN,CAAc+C,GAAG,SAAS3C,MAAOwF,EAAK1F,SAAU,SAACP,GAAD,OAAOkG,EAAOlG,EAAEQ,OAAOC,QAAvE,SACK,YAAI6D,MAAM7I,EAAQkL,cAAcpC,QAAQ/H,KAAI,SAAAD,GAAC,OAC1C,wBAAkBkE,MAAOlE,EAAE,EAA3B,SACKA,EAAE,GADMA,EAAE,eASvC,cAACmK,GAAA,EAAU1E,KAAX,UACI,cAACpB,GAAA,EAAD,CAAQqB,QA7EP,WACrBvC,EAAQS,KAAR,gBAAsBuF,EAAMC,OAAO/G,GAAnC,gBAA6CqH,KA4EUtF,UAAU,YAAYzF,KAAK,SAAS0L,SAAmC,IAAzBnL,EAAQkL,aAAzF,qCAMpB,cAACtE,GAAA,EAAD,UACI,eAACC,GAAA,EAAD,CAAKuD,GAAI,EAAT,UACI,yCAC4B,IAA3BpK,EAAQC,QAAQmL,QAAgB,cAAC,GAAD,yBACjC,eAACH,GAAA,EAAD,CAAW7F,QAAQ,QAAnB,UACKpF,EAAQC,QAAQc,KAAI,SAAAsK,GAAM,OACvB,eAACJ,GAAA,EAAU1E,KAAX,WACI,iCAAS8E,EAAOxG,OAChB,cAAC,GAAD,CAAQG,MAAOqG,EAAOxD,SACtB,4BAAIwD,EAAOC,UAAUC,UAAU,EAAG,MAClC,4BAAIF,EAAOV,YAJMU,EAAOhE,QAOhC,eAAC4D,GAAA,EAAU1E,KAAX,WACI,yDACCuE,GAAsB,cAAC,GAAD,CAAS1F,QAAQ,SAAjB,SAA2B0F,IACjD3J,EACG,eAACkD,GAAA,EAAD,CAAMC,SAhGR,SAACC,GJuFQ,IAACiH,EAAWH,EItFvC9G,EAAEC,iBACFpB,GJqF4BoI,EIrFCvB,EAAMC,OAAO/G,GJqFHkI,EIrFO,CAACxD,SAAQ8C,WJqF5B,yCAAuB,WAAOvH,EAAUC,GAAjB,oBAAAC,EAAA,sEAElDF,EAAS,CACL3D,KAAMjE,IAHwC,EAMd6H,IAAflC,EAN6B,EAM1CD,UAAaC,SAEfoC,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,OAAYtC,EAASuC,SAXQ,SAe5CC,KAAM8H,KAAN,wBAA4BD,EAA5B,YAAiDH,EAAQ9H,GAfb,OAiBlDH,EAAS,CACL3D,KAAMhE,IAlBwC,gDAsBlD2H,EAAS,CACL3D,KAAM/D,EACNiE,QAAS,KAAMmE,UAAY,KAAMA,SAASD,KAAKE,QAAU,KAAMD,SAASD,KAAKE,QAAU,KAAMA,UAxB/C,yDAAvB,2DISP,UACI,eAACM,GAAA,EAAKqH,MAAN,CAAYC,UAAU,SAAtB,UACI,cAACtH,GAAA,EAAKuH,MAAN,qBACA,eAACvH,GAAA,EAAKO,QAAN,CAAc+C,GAAG,SAAS3C,MAAO6C,EAAQ/C,SAAU,SAACP,GAAOmG,EAAUnG,EAAEQ,OAAOC,QAA9E,UACI,wBAAQA,MAAM,GAAd,uBACA,wBAAQA,MAAM,IAAd,sBACA,wBAAQA,MAAM,IAAd,sBACA,wBAAQA,MAAM,IAAd,sBACA,wBAAQA,MAAM,IAAd,2BACA,wBAAQA,MAAM,IAAd,iCAGR,eAACX,GAAA,EAAKqH,MAAN,CAAYC,UAAU,UAAtB,UACI,cAACtH,GAAA,EAAKuH,MAAN,sBAGA,cAACvH,GAAA,EAAKO,QAAN,CAAc+C,GAAG,WAAWkE,IAAI,IAAI7G,MAAO2F,EAAS7F,SAAU,SAACP,GAAOqG,EAAWrG,EAAEQ,OAAOC,aAE9F,cAACG,GAAA,EAAD,CAAQ1F,KAAK,SAAS2F,QAAQ,UAA9B,uBAKR,eAAC,GAAD,qBAAgB,cAAC,QAAD,CAAMS,GAAI,SAAV,qBAAhB,0CC7JXiG,GAAY,SAAC3I,EAAIqH,GAAL,gDAAa,WAAOpH,EAAUC,GAAjB,kBAAAC,EAAA,sEACbK,KAAMC,IAAN,wBAA2BT,IADd,gBAC3BU,EAD2B,EAC3BA,KAEPT,EAAS,CACL3D,KAAM1D,EACN4D,QAAS,CACLK,QAAS6D,EAAKwD,IACdxC,KAAMhB,EAAKgB,KACX2C,MAAO3D,EAAK2D,MACZO,MAAOlE,EAAKkE,MACZmD,aAAcrH,EAAKqH,aACnBV,SAIRlI,aAAayJ,QAAQ,YAAavJ,KAAKwJ,UAAU3I,IAAW7C,KAAKC,YAf/B,2CAAb,yDC4FVwL,GAxFI,SAAC,GAAgC,IAA/BhC,EAA8B,EAA9BA,MAAOiC,EAAuB,EAAvBA,SAAUjI,EAAa,EAAbA,QAC5BuH,EAAYvB,EAAMC,OAAO/G,GAEzBqH,EAAM0B,EAASC,OAASC,OAAOF,EAASC,OAAOE,MAAM,KAAK,IAAK,EAE/DjJ,EAAWkC,cAGV7E,EADM8E,aAAY,SAAAjG,GAAK,OAAIA,EAAMkB,QACjCC,UAEP2I,qBAAU,WACHoC,GACCpI,EAAS0I,GAAUN,EAAWhB,MAEnC,CAACpH,EAAUoI,EAAWhB,IAEzB,IAAM8B,EAAwB,SAACnJ,GAC3BC,EDHsB,SAACD,GAAD,OAAQ,SAACC,EAAUC,GAC7CD,EAAS,CACL3D,KAAMzD,EACN2D,QAASwD,IAGbb,aAAayJ,QAAQ,YAAavJ,KAAKwJ,UAAU3I,IAAW7C,KAAKC,aCHpD8L,CAAepJ,KAO5B,OACI,eAACyD,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,CAAKuD,GAAI,EAAT,UACI,+CACsB,IAArB3J,EAAU2K,OACX,eAAC,GAAD,iCAA4B,cAAC,QAAD,CAAMvF,GAAG,IAAT,wBAExB,cAACoF,GAAA,EAAD,CAAW7F,QAAQ,QAAnB,SACK3E,EAAUM,KAAI,SAAAJ,GAAI,OAAK,cAACsK,GAAA,EAAU1E,KAAX,UAChB,eAACK,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,CAAKuD,GAAI,EAAT,SACI,cAACb,GAAA,EAAD,CAAOhC,IAAK5G,EAAK6G,MAAOgC,IAAK7I,EAAKkE,KAAM4E,OAAK,EAAC+C,SAAO,MAEzD,cAAC3F,GAAA,EAAD,CAAKuD,GAAI,EAAT,SACI,cAAC,QAAD,CAAMvE,GAAE,uBAAkBlF,EAAKX,SAA/B,SAA4CW,EAAKkE,SAErD,eAACgC,GAAA,EAAD,CAAKuD,GAAI,EAAT,cACMzJ,EAAKoH,SAEX,cAAClB,GAAA,EAAD,CAAKuD,GAAI,EAAT,SACI,cAAC/F,GAAA,EAAKO,QAAN,CAAc+C,GAAG,SAAS3C,MAAOrE,EAAK6J,IAAK1F,SAAU,SAACP,GAAD,OAAOnB,EAAS0I,GAAUnL,EAAKX,QAASoM,OAAO7H,EAAEQ,OAAOC,UAA7G,SACK,YAAI6D,MAAMlI,EAAKuK,cAAcpC,QAAQ/H,KAAI,SAAAD,GAAC,OACvC,wBAAkBkE,MAAOlE,EAAE,EAA3B,SACKA,EAAE,GADMA,EAAE,UAM3B,cAAC+F,GAAA,EAAD,CAAKuD,GAAI,EAAT,SACI,cAACjF,GAAA,EAAD,CACA1F,KAAK,SACL2F,QAAQ,QACRoB,QAAS,kBAAM8F,EAAsB3L,EAAKX,UAH1C,SAKA,mBAAGkF,UAAU,yBA1BgBvE,EAAKX,iBAmC9D,cAAC6G,GAAA,EAAD,CAAKuD,GAAI,EAAT,SACI,cAAChD,GAAA,EAAD,UACI,eAAC6D,GAAA,EAAD,CAAW7F,QAAQ,QAAnB,UACI,eAAC6F,GAAA,EAAU1E,KAAX,WACI,4CACe9F,EAAUgM,QAAO,SAACC,EAAK/L,GAAN,OAAe+L,EAAM/L,EAAK6J,MAAK,GAD/D,aADJ,KAIO/J,EAAUgM,QAAO,SAACC,EAAK/L,GAAN,OAAe+L,EAAM/L,EAAK6J,IAAM7J,EAAKoH,QAAO,GAAG4E,QAAQ,MAE/E,cAAC1B,GAAA,EAAU1E,KAAX,UACI,cAACpB,GAAA,EAAD,CAAQ1F,KAAK,SAASyF,UAAU,YAAYiG,SAA+B,IAArB1K,EAAU2K,OAAc5E,QAzD9E,WACrBvC,EAAQS,KAAK,6BAwDQ,8CCrEbkI,GAZO,SAAC,GAAgB,IAAfnE,EAAc,EAAdA,SACpB,OACI,cAAC7C,GAAA,EAAD,UACI,cAACgB,GAAA,EAAD,CAAK1B,UAAU,4BAAf,SACI,cAAC2B,GAAA,EAAD,CAAKgG,GAAI,GAAIzC,GAAI,EAAjB,SACK3B,SCkDNqE,GAjDK,SAAC,GAAyB,IAAxBZ,EAAuB,EAAvBA,SAAUjI,EAAa,EAAbA,QAAa,EACfC,mBAAS,IADM,oBAClC6I,EADkC,KAC3BC,EAD2B,OAET9I,mBAAS,IAFA,oBAElC+I,EAFkC,KAExBC,EAFwB,KAInC9J,EAAWkC,cAEXpE,EAAYqE,aAAY,SAAAjG,GAAK,OAAIA,EAAM4B,aACtCxB,EAA4BwB,EAA5BxB,QAASI,EAAmBoB,EAAnBpB,MAAOqB,EAAYD,EAAZC,SAEjBgM,EAAWjB,EAASC,OAASD,EAASC,OAAOE,MAAM,KAAK,GAAK,IAEnEjD,qBAAU,WACHjI,GACH8C,EAAQS,KAAKyI,KAEd,CAAClJ,EAASkJ,EAAUhM,IAOvB,OACI,eAAC,GAAD,WACI,yCACCrB,GAAS,cAAC,GAAD,CAASsF,QAAQ,SAAjB,SAA2BtF,IACpCJ,GAAW,cAAC,GAAD,IACZ,eAAC2E,GAAA,EAAD,CAAMC,SAVQ,SAACC,GACnBA,EAAEC,iBACFpB,EjBxBa,SAAC2J,EAAOE,GAAR,gDAAqB,WAAO7J,GAAP,oBAAAE,EAAA,sEAElCF,EAAS,CACL3D,KAAMrD,IAGJmH,EAAS,CACXC,QAAS,CACL,eAAgB,qBARU,SAYbG,KAAM8H,KAAK,mBAAoB,CAACsB,QAAOE,YAAW1J,GAZrC,gBAY3BM,EAZ2B,EAY3BA,KAEPT,EAAS,CACL3D,KAAMtD,EACNwD,QAASkE,IAGbvB,aAAayJ,QAAQ,WAAYvJ,KAAKwJ,UAAUnI,IAnBd,kDAsBlCT,EAAS,CACL3D,KAAMpD,EACNsD,QAAS,KAAMmE,UAAY,KAAMA,SAASD,KAAKE,QAAU,KAAMD,SAASD,KAAKE,QAAU,KAAMA,UAxB/D,0DAArB,sDiBwBJqJ,CAAML,EAAOE,KAQlB,UACI,eAAC5I,GAAA,EAAKqH,MAAN,CAAYC,UAAU,QAAtB,UACI,cAACtH,GAAA,EAAKuH,MAAN,4BACA,cAACvH,GAAA,EAAKO,QAAN,CAAcnF,KAAK,QAAQwF,YAAY,2BAA2BD,MAAO+H,EAAOjI,SAAU,SAACP,GAAD,OAAOyI,EAASzI,EAAEQ,OAAOC,aAEvH,eAACX,GAAA,EAAKqH,MAAN,CAAYC,UAAU,WAAtB,UACI,cAACtH,GAAA,EAAKuH,MAAN,uBACA,cAACvH,GAAA,EAAKO,QAAN,CAAcnF,KAAK,WAAWwF,YAAY,sBAAsBD,MAAOiI,EAAUnI,SAAU,SAACP,GAAD,OAAO2I,EAAY3I,EAAEQ,OAAOC,aAE3H,cAACG,GAAA,EAAD,CAAQ1F,KAAK,SAAS2F,QAAQ,UAA9B,wBAIJ,cAACwB,GAAA,EAAD,CAAK1B,UAAU,OAAf,SACI,eAAC2B,GAAA,EAAD,4BACmB,GADnB,IACuB,cAAC,QAAD,CAAMhB,GAAIsH,EAAQ,6BAAyBA,GAAa,YAAxD,oCCyBxBE,GAnEQ,SAAC,GAAyB,IAAxBnB,EAAuB,EAAvBA,SAAUjI,EAAa,EAAbA,QAAa,EACpBC,mBAAS,IADW,oBACrCW,EADqC,KAC/ByI,EAD+B,OAElBpJ,mBAAS,IAFS,oBAErC6I,EAFqC,KAE9BC,EAF8B,OAGZ9I,mBAAS,IAHG,oBAGrC+I,EAHqC,KAG3BC,EAH2B,OAIEhJ,mBAAS,IAJX,oBAIrCqJ,EAJqC,KAIpBC,EAJoB,OAKdtJ,mBAAS,MALK,oBAKrCH,EALqC,KAK5B0J,EAL4B,KAQtCrK,EAAWkC,cAEXlE,EAAemE,aAAY,SAAAjG,GAAK,OAAIA,EAAM8B,gBACzC1B,EAA4B0B,EAA5B1B,QAASI,EAAmBsB,EAAnBtB,MAAOqB,EAAYC,EAAZD,SAEjBgM,EAAWjB,EAASC,OAASD,EAASC,OAAOE,MAAM,KAAK,GAAK,IAEnEjD,qBAAU,WACHjI,GACH8C,EAAQS,KAAKyI,KAEd,CAAClJ,EAASkJ,EAAUhM,IAYvB,OACI,eAAC,GAAD,WACI,yCACC4C,GAAW,cAAC,GAAD,CAASqB,QAAQ,SAAjB,SAA2BrB,IACtCjE,GAAS,cAAC,GAAD,CAASsF,QAAQ,SAAjB,SAA2BtF,IACpCJ,GAAW,cAAC,GAAD,IACZ,eAAC2E,GAAA,EAAD,CAAMC,SAhBQ,SAACC,GACnBA,EAAEC,iBAECyI,IAAaM,EACZE,EAAW,0BAEXrK,ElBHY,SAACyB,EAAMkI,EAAOE,GAAd,gDAA2B,WAAO7J,GAAP,oBAAAE,EAAA,sEAE3CF,EAAS,CACL3D,KAAMjD,IAGJ+G,EAAS,CACXC,QAAS,CACL,eAAgB,qBARmB,SAYtBG,KAAM8H,KAAK,aAAc,CAAC5G,OAAMkI,QAAOE,YAAW1J,GAZ5B,gBAYpCM,EAZoC,EAYpCA,KAEPT,EAAS,CACL3D,KAAMlD,EACNoD,QAASkE,IAGbT,EAAS,CACL3D,KAAMtD,EACNwD,QAASkE,IAGbvB,aAAayJ,QAAQ,WAAYvJ,KAAKwJ,UAAUnI,IAxBL,kDA2B3CT,EAAS,CACL3D,KAAMpD,EACNsD,QAAS,KAAMmE,UAAY,KAAMA,SAASD,KAAKE,QAAU,KAAMD,SAASD,KAAKE,QAAU,KAAMA,UA7BtD,0DAA3B,sDkBGH2J,CAAS7I,EAAMkI,EAAOE,KAU/B,UACI,eAAC5I,GAAA,EAAKqH,MAAN,CAAYC,UAAU,OAAtB,UACI,cAACtH,GAAA,EAAKuH,MAAN,mBACA,cAACvH,GAAA,EAAKO,QAAN,CAAcnF,KAAK,OAAOwF,YAAY,kBAAkBD,MAAOH,EAAMC,SAAU,SAACP,GAAD,OAAO+I,EAAQ/I,EAAEQ,OAAOC,aAE3G,eAACX,GAAA,EAAKqH,MAAN,CAAYC,UAAU,QAAtB,UACI,cAACtH,GAAA,EAAKuH,MAAN,4BACA,cAACvH,GAAA,EAAKO,QAAN,CAAcnF,KAAK,QAAQwF,YAAY,2BAA2BD,MAAO+H,EAAOjI,SAAU,SAACP,GAAD,OAAOyI,EAASzI,EAAEQ,OAAOC,aAEvH,eAACX,GAAA,EAAKqH,MAAN,CAAYC,UAAU,WAAtB,UACI,cAACtH,GAAA,EAAKuH,MAAN,uBACA,cAACvH,GAAA,EAAKO,QAAN,CAAcnF,KAAK,WAAWwF,YAAY,sBAAsBD,MAAOiI,EAAUnI,SAAU,SAACP,GAAD,OAAO2I,EAAY3I,EAAEQ,OAAOC,aAE3H,eAACX,GAAA,EAAKqH,MAAN,CAAYC,UAAU,kBAAtB,UACI,cAACtH,GAAA,EAAKuH,MAAN,+BACA,cAACvH,GAAA,EAAKO,QAAN,CAAcnF,KAAK,WAAWwF,YAAY,mBAAmBD,MAAOuI,EAAiBzI,SAAU,SAACP,GAAD,OAAOiJ,EAAmBjJ,EAAEQ,OAAOC,aAEtI,cAACG,GAAA,EAAD,CAAQ1F,KAAK,SAAS2F,QAAQ,UAA9B,wBAIJ,cAACwB,GAAA,EAAD,CAAK1B,UAAU,OAAf,SACI,eAAC2B,GAAA,EAAD,+BACsB,GADtB,IAC0B,cAAC,QAAD,CAAMhB,GAAIsH,EAAQ,0BAAsBA,GAAa,SAArD,4B,UCkE3BE,GA7HQ,SAAC,GAAwB,EAAvBnB,SAAwB,IAAdjI,EAAa,EAAbA,QAAa,EACpBC,mBAAS,IADW,oBACrCW,EADqC,KAC/ByI,EAD+B,OAElBpJ,mBAAS,IAFS,oBAErC6I,EAFqC,KAE9BC,EAF8B,OAGZ9I,mBAAS,IAHG,oBAGrC+I,EAHqC,KAG3BC,EAH2B,OAIEhJ,mBAAS,IAJX,oBAIrCqJ,EAJqC,KAIpBC,EAJoB,OAKdtJ,mBAAS,MALK,oBAKrCH,EALqC,KAK5B0J,EAL4B,KAOtCrK,EAAWkC,cAEXjE,EAAckE,aAAY,SAAAjG,GAAK,OAAIA,EAAM+B,eACxC3B,EAAwB2B,EAAxB3B,QAASI,EAAeuB,EAAfvB,MAAOwB,EAAQD,EAARC,KAGhBH,EADWoE,aAAY,SAAAjG,GAAK,OAAIA,EAAM4B,aACtCC,SAGAhB,EADmBoF,aAAY,SAAAjG,GAAK,OAAIA,EAAMiC,qBAC9CpB,QAED+B,EAAcqD,aAAY,SAAAjG,GAAK,OAAIA,EAAM4C,eAC/ByL,EAA6CzL,EAAtDxC,QAA+BkO,EAAuB1L,EAA9BpC,MAAoBqC,EAAUD,EAAVC,OAGnDiH,qBAAU,WACFjI,EAGKG,GAASA,EAAKuD,OAAQ1E,GAKvBmN,EAAQhM,EAAKuD,MACbmI,EAAS1L,EAAKyL,SALd3J,EAAS,CAAC3D,KAAMxC,KAChBmG,EAASF,GAAe,YACxBE,ECqFY,yCAAM,WAAOA,EAAUC,GAAjB,wBAAAC,EAAA,sEAE1BF,EAAS,CACL3D,KAAMjB,KAHgB,EAMU6E,IAAflC,EANK,EAMlBD,UAAaC,SAEfoC,EAAS,CACXC,QAAS,CACLC,cAAc,UAAD,OAAYtC,EAASuC,SAVhB,SAcLC,KAAMC,IAAN,uBAAkCL,GAd7B,gBAcnBM,EAdmB,EAcnBA,KAEPT,EAAS,CACL3D,KAAMlB,GACNoB,QAASkE,IAlBa,kDAsB1BT,EAAS,CACL3D,KAAMhB,GACNkB,QAAS,KAAMmE,UAAY,KAAMA,SAASD,KAAKE,QAAU,KAAMD,SAASD,KAAKE,QAAU,KAAMA,UAxBvE,0DAAN,0DD1FpBE,EAAQS,KAAK,OAWd,CAACtB,EAAUa,EAAS9C,EAAUG,EAAMnB,IAWvC,OACI,eAACyG,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,CAAKuD,GAAI,EAAT,UACA,8CACCrG,GAAW,cAAC,GAAD,CAASqB,QAAQ,SAAjB,SAA2BrB,IACtCjE,GAAS,cAAC,GAAD,CAASsF,QAAQ,SAAjB,SAA2BtF,IACpCK,GAAW,cAAC,GAAD,CAASiF,QAAQ,UAAjB,8BACX1F,GAAW,cAAC,GAAD,IACZ,eAAC2E,GAAA,EAAD,CAAMC,SAjBQ,SAACC,GACnBA,EAAEC,iBAECyI,IAAaM,EACZE,EAAW,0BAEXrK,EnB4DqB,SAAC9B,GAAD,gDAAU,WAAO8B,EAAUC,GAAjB,wBAAAC,EAAA,sEAEnCF,EAAS,CACL3D,KAAM1C,IAHyB,EAQ7BsG,IADWlC,EAPkB,EAO/BD,UAAaC,SAGToC,EAAS,CACbC,QAAS,CACPC,cAAc,UAAD,OAAYtC,EAASuC,SAZL,SAedC,KAAMkK,IAAN,qBAAgCvM,EAAMiC,GAfxB,gBAe5BM,EAf4B,EAe5BA,KAEPT,EAAS,CACL3D,KAAM3C,EACN6C,QAASkE,IAGbT,EAAS,CACL3D,KAAMtD,EACNwD,QAASkE,IAGbvB,aAAayJ,QAAQ,WAAYvJ,KAAKwJ,UAAUnI,IA3Bb,kDA8BnCT,EAAS,CACL3D,KAAMzC,GACN2C,QAAS,KAAMmE,UAAY,KAAMA,SAASD,KAAKE,QAAU,KAAMD,SAASD,KAAKE,QAAU,KAAMA,UAhC9D,0DAAV,wDmB5DZ+J,CAAkB,CAAC3K,GAAI7B,EAAK+F,IAAKxC,OAAMkI,QAAOE,eAWvD,UACI,eAAC5I,GAAA,EAAKqH,MAAN,CAAYC,UAAU,OAAtB,UACI,cAACtH,GAAA,EAAKuH,MAAN,mBACA,cAACvH,GAAA,EAAKO,QAAN,CAAcnF,KAAK,OAAOwF,YAAY,kBAAkBD,MAAOH,EAAMC,SAAU,SAACP,GAAD,OAAO+I,EAAQ/I,EAAEQ,OAAOC,aAE3G,eAACX,GAAA,EAAKqH,MAAN,CAAYC,UAAU,QAAtB,UACI,cAACtH,GAAA,EAAKuH,MAAN,4BACA,cAACvH,GAAA,EAAKO,QAAN,CAAcnF,KAAK,QAAQwF,YAAY,2BAA2BD,MAAO+H,EAAOjI,SAAU,SAACP,GAAD,OAAOyI,EAASzI,EAAEQ,OAAOC,aAEvH,eAACX,GAAA,EAAKqH,MAAN,CAAYC,UAAU,WAAtB,UACI,cAACtH,GAAA,EAAKuH,MAAN,uBACA,cAACvH,GAAA,EAAKO,QAAN,CAAcnF,KAAK,WAAWwF,YAAY,sBAAsBD,MAAOiI,EAAUnI,SAAU,SAACP,GAAD,OAAO2I,EAAY3I,EAAEQ,OAAOC,aAE3H,eAACX,GAAA,EAAKqH,MAAN,CAAYC,UAAU,kBAAtB,UACI,cAACtH,GAAA,EAAKuH,MAAN,+BACA,cAACvH,GAAA,EAAKO,QAAN,CAAcnF,KAAK,WAAWwF,YAAY,mBAAmBD,MAAOuI,EAAiBzI,SAAU,SAACP,GAAD,OAAOiJ,EAAmBjJ,EAAEQ,OAAOC,aAEtI,cAACG,GAAA,EAAD,CAAQ1F,KAAK,SAAS2F,QAAQ,UAA9B,0BAKJ,eAACyB,GAAA,EAAD,CAAKuD,GAAI,EAAT,UACI,2CACCuD,EAAgB,cAAC,GAAD,IAAaC,EAAc,cAAC,GAAD,CAASxI,QAAQ,SAAjB,SAA2BwI,IACnE,eAACG,GAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,YAAU,EAACjJ,UAAU,WAAnD,UACI,gCACI,+BACI,oCACA,sCACA,uCACA,sCACA,2CACA,8CAGR,gCACK/C,EAAOpB,KAAI,SAACc,GAAD,OACR,+BACI,6BAAKA,EAAMwF,MACX,6BAAKxF,EAAMyJ,UAAUC,UAAU,EAAG,MAClC,6BAAK1J,EAAMuM,aACX,6BACKvM,EAAMwM,OACHxM,EAAMyM,OAAO/C,UAAU,EAAG,IAC1B,mBAAGrG,UAAU,eAAe+B,MAAO,CAACD,MAAO,WAGnD,6BACKnF,EAAM0M,YACH1M,EAAM2M,YAAYjD,UAAU,EAAG,IAC/B,mBAAGrG,UAAU,eAAe+B,MAAO,CAACD,MAAO,WAGnD,6BACI,cAAC,iBAAD,CAAenB,GAAE,iBAAYhE,EAAMwF,KAAnC,SACI,cAAClC,GAAA,EAAD,CAAQD,UAAU,SAASE,QAAQ,QAAnC,2BAlBHvD,EAAMwF,oBEvDhCoH,GA3CO,SAAC,GAAkC,IAAjCC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,MACzC,OACI,eAAC1I,GAAA,EAAD,CAAKjB,UAAU,8BAAf,UACI,cAACiB,GAAA,EAAII,KAAL,UACKmI,EACG,cAAC,iBAAD,CAAe7I,GAAG,SAAlB,SACI,cAACM,GAAA,EAAIC,KAAL,wBAGJ,cAACD,GAAA,EAAIC,KAAL,CAAU+E,UAAQ,EAAlB,uBAGR,cAAChF,GAAA,EAAII,KAAL,UACKoI,EACG,cAAC,iBAAD,CAAe9I,GAAG,YAAlB,SACI,cAACM,GAAA,EAAIC,KAAL,yBAGJ,cAACD,GAAA,EAAIC,KAAL,CAAU+E,UAAQ,EAAlB,wBAGR,cAAChF,GAAA,EAAII,KAAL,UACKqI,EACG,cAAC,iBAAD,CAAe/I,GAAG,YAAlB,SACI,cAACM,GAAA,EAAIC,KAAL,wBAGJ,cAACD,GAAA,EAAIC,KAAL,CAAU+E,UAAQ,EAAlB,uBAGR,cAAChF,GAAA,EAAII,KAAL,UACKsI,EACG,cAAC,iBAAD,CAAehJ,GAAG,cAAlB,SACI,cAACM,GAAA,EAAIC,KAAL,4BAGJ,cAACD,GAAA,EAAIC,KAAL,CAAU+E,UAAQ,EAAlB,+BCWL2D,GA5CQ,SAAC,GAAe,IAAd7K,EAAa,EAAbA,QAEdvD,EADM6E,aAAY,SAAAjG,GAAK,OAAIA,EAAMkB,QACjCE,gBAF2B,EAIJwD,mBAASxD,EAAgBqO,SAJrB,oBAI3BA,EAJ2B,KAIlBC,EAJkB,OAKV9K,mBAASxD,EAAgBuO,MALf,oBAK3BA,EAL2B,KAKrBC,EALqB,OAMEhL,mBAASxD,EAAgByO,YAN3B,oBAM3BA,EAN2B,KAMfC,EANe,OAOJlL,mBAASxD,EAAgB2O,SAPrB,oBAO3BA,EAP2B,KAOlBC,EAPkB,KAS5BlM,EAAWkC,cAQjB,OACI,eAAC,GAAD,WACI,cAAC,GAAD,CAAeoJ,OAAK,EAACC,OAAK,IAC1B,0CACA,eAACtK,GAAA,EAAD,CAAMC,SAVQ,SAACC,GRYQ,IAACV,EQX5BU,EAAEC,iBACFpB,GRU4BS,EQVC,CAACkL,UAASE,OAAME,aAAYE,WRUpB,SAACjM,GAC1CA,EAAS,CACL3D,KAAMxD,EACN0D,QAASkE,IAGbvB,aAAayJ,QAAQ,kBAAmBvJ,KAAKwJ,UAAUnI,OQfnDI,EAAQS,KAAK,aAOT,UACI,eAACL,GAAA,EAAKqH,MAAN,CAAYC,UAAU,UAAtB,UACI,cAACtH,GAAA,EAAKuH,MAAN,sBACA,cAACvH,GAAA,EAAKO,QAAN,CAAc2K,UAAQ,EAAC9P,KAAK,OAAOwF,YAAY,qBAAqBD,MAAO+J,EAASjK,SAAU,SAACP,GAAD,OAAOyK,EAAWzK,EAAEQ,OAAOC,aAE7H,eAACX,GAAA,EAAKqH,MAAN,CAAYC,UAAU,OAAtB,UACI,cAACtH,GAAA,EAAKuH,MAAN,mBACA,cAACvH,GAAA,EAAKO,QAAN,CAAc2K,UAAQ,EAAC9P,KAAK,OAAOwF,YAAY,kBAAkBD,MAAOiK,EAAMnK,SAAU,SAACP,GAAD,OAAO2K,EAAQ3K,EAAEQ,OAAOC,aAEpH,eAACX,GAAA,EAAKqH,MAAN,CAAYC,UAAU,aAAtB,UACI,cAACtH,GAAA,EAAKuH,MAAN,0BACA,cAACvH,GAAA,EAAKO,QAAN,CAAc2K,UAAQ,EAAC9P,KAAK,OAAOwF,YAAY,yBAAyBD,MAAOmK,EAAYrK,SAAU,SAACP,GAAD,OAAO6K,EAAc7K,EAAEQ,OAAOC,aAEvI,eAACX,GAAA,EAAKqH,MAAN,CAAYC,UAAU,UAAtB,UACI,cAACtH,GAAA,EAAKuH,MAAN,sBACA,cAACvH,GAAA,EAAKO,QAAN,CAAc2K,UAAQ,EAAC9P,KAAK,OAAOwF,YAAY,qBAAqBD,MAAOqK,EAASvK,SAAU,SAACP,GAAD,OAAO+K,EAAW/K,EAAEQ,OAAOC,aAE7H,cAACG,GAAA,EAAD,CAAQ1F,KAAK,SAAS2F,QAAQ,UAA9B,6BCFDoK,GApCO,SAAC,GAAe,IAAdvL,EAAa,EAAbA,QACPsB,aAAY,SAAAjG,GAAK,OAAIA,EAAMkB,QACjCE,iBAGHuD,EAAQS,KAAK,aALgB,MAQSR,mBAAS,UARlB,oBAQ1BjD,EAR0B,KAQXwO,EARW,KAU3BrM,EAAWkC,cAQjB,OACI,eAAC,GAAD,WACI,cAAC,GAAD,CAAeoJ,OAAK,EAACC,OAAK,EAACC,OAAK,IAChC,gDACA,eAACvK,GAAA,EAAD,CAAMC,SAVQ,SAACC,GToBM,IAACV,ESnB1BU,EAAEC,iBACFpB,GTkB0BS,ESlBC5C,ETkBQ,SAACmC,GACxCA,EAAS,CACL3D,KAAMvD,EACNyD,QAASkE,IAGbvB,aAAayJ,QAAQ,gBAAiBvJ,KAAKwJ,UAAUnI,OSvBjDI,EAAQS,KAAK,gBAOT,UACI,eAACL,GAAA,EAAKqH,MAAN,WACI,cAACrH,GAAA,EAAKuH,MAAN,CAAYjE,GAAG,SAAf,2BACA,cAACd,GAAA,EAAD,UACI,cAACxC,GAAA,EAAKqL,MAAN,CAAYjQ,KAAK,QAAQkQ,MAAM,wBAAwBxM,GAAG,SAAS0B,KAAK,gBAAgBG,MAAM,SAAS4K,SAAO,EAAC9K,SAAU,SAACP,GAAD,OAAOkL,EAAiBlL,EAAEQ,OAAOC,eAIlK,cAACG,GAAA,EAAD,CAAQ1F,KAAK,SAAS2F,QAAQ,UAA9B,6BCqGDyK,GAlIU,SAAC,GAAe,IAAd5L,EAAa,EAAbA,QACjBb,EAAWkC,cAEX9E,EAAO+E,aAAY,SAACjG,GAAD,OAAWA,EAAMkB,QAEpCsP,EAAc,SAACC,GACjB,OAAQC,KAAKC,MAAY,IAANF,GAAY,KAAKpD,QAAQ,IAGhDnM,EAAK0P,WAAa1P,EAAKC,UAAUgM,QAAO,SAACC,EAAK/L,GAAN,OAAe+L,EAAM/L,EAAKoH,MAAQpH,EAAK6J,MAAK,GAAGmC,QAAQ,GAE/FnM,EAAK2P,cAAgBL,EAAYtP,EAAK0P,WAAa,IAAM,EAAI,IAE7D1P,EAAK4P,SAAWN,EAAY1D,QAA0B,IAAlB5L,EAAK0P,YAAmBvD,QAAQ,KAEpEnM,EAAK4N,YAAchC,OAAO5L,EAAK0P,YAAc9D,OAAO5L,EAAK2P,eAAiB/D,OAAO5L,EAAK4P,WAAWzD,QAAQ,GAEzG,IAAM/K,EAAc2D,aAAY,SAACjG,GAAD,OAAWA,EAAMsC,eAC1CC,EAAyBD,EAAzBC,MAAO1B,EAAkByB,EAAlBzB,QAASL,EAAS8B,EAAT9B,MAoBvB,OANAsJ,qBAAU,WACHjJ,GACF8D,EAAQS,KAAR,iBAAuB7C,EAAMwF,QAE/B,CAACpD,EAAS9D,IAGT,qCACI,cAAC,GAAD,CAAeuO,OAAK,EAACC,OAAK,EAACC,OAAK,EAACC,OAAK,IACtC,eAACjI,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,CAAKuD,GAAI,EAAT,SACI,eAACa,GAAA,EAAD,CAAW7F,QAAQ,QAAnB,UACI,eAAC6F,GAAA,EAAU1E,KAAX,WACI,0CACA,8BACI,+CACC/F,EAAKE,gBAAgBqO,QAF1B,IAEoC,IAAKvO,EAAKE,gBAAgBuO,KAF9D,IAGK,IAAKzO,EAAKE,gBAAgByO,WAH/B,IAIK,IAAK3O,EAAKE,gBAAgB2O,cAInC,eAACpE,GAAA,EAAU1E,KAAX,WACI,gDACA,8BACI,8CACC/F,EAAKS,oBAId,eAACgK,GAAA,EAAU1E,KAAX,WACI,6CAC2B,IAA1B/F,EAAKC,UAAU2K,OAAe,cAAC,GAAD,iCAC3B,cAACH,GAAA,EAAD,CAAW7F,QAAQ,QAAnB,SACC5E,EAAKC,UAAUM,KAAI,SAACJ,EAAM0P,GAAP,OAChB,cAACpF,GAAA,EAAU1E,KAAX,UACI,eAACK,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,CAAKuD,GAAI,EAAT,SACI,cAACb,GAAA,EAAD,CAAOhC,IAAK5G,EAAK6G,MAAOgC,IAAK7I,EAAKkE,KAAM4E,OAAK,EAAC+C,SAAO,MAEzD,cAAC3F,GAAA,EAAD,UACI,cAAC,QAAD,CAAMhB,GAAE,mBAAclF,EAAKX,SAA3B,SAAuCW,EAAKkE,SAEhD,eAACgC,GAAA,EAAD,CAAKuD,GAAI,EAAT,UACKzJ,EAAK6J,IADV,OACmB7J,EAAKoH,MADxB,QACoCpH,EAAK6J,IAAM7J,EAAKoH,OAAO4E,QAAQ,UATtD0D,gBAmBzC,cAACxJ,GAAA,EAAD,CAAKuD,GAAI,EAAT,SACI,cAAChD,GAAA,EAAD,UACI,eAAC6D,GAAA,EAAD,CAAW7F,QAAQ,QAAnB,UACI,cAAC6F,GAAA,EAAU1E,KAAX,UACI,iDAEJ,cAAC0E,GAAA,EAAU1E,KAAX,UACI,eAACK,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,oBACA,eAACA,GAAA,EAAD,eAAOrG,EAAK0P,mBAGpB,cAACjF,GAAA,EAAU1E,KAAX,UACI,eAACK,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,uBACA,eAACA,GAAA,EAAD,eAAOrG,EAAK2P,sBAGpB,cAAClF,GAAA,EAAU1E,KAAX,UACI,eAACK,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,wBACA,eAACA,GAAA,EAAD,eAAOrG,EAAK4P,iBAGpB,cAACnF,GAAA,EAAU1E,KAAX,UACI,eAACK,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,oBACA,eAACA,GAAA,EAAD,eAAOrG,EAAK4N,mBAGpB,cAACnD,GAAA,EAAU1E,KAAX,UACKzG,GAAS,cAAC,GAAD,CAASsF,QAAQ,SAAjB,SAA2BtF,MAEzC,cAACmL,GAAA,EAAU1E,KAAX,UACI,cAACpB,GAAA,EAAD,CAAQ1F,KAAK,SAASyF,UAAU,YAAYiG,SAA6B,IAAnB3K,EAAKC,UAAiB+F,QApG9E,SAACjC,GACvBnB,EJ1BmB,SAACvB,GAAD,gDAAW,WAAOuB,EAAUC,GAAjB,wBAAAC,EAAA,sEAE9BF,EAAS,CACL3D,KAAM3B,KAHoB,EAMMuF,IAAflC,EANS,EAMtBD,UAAaC,SAEfoC,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,OAAYtC,EAASuC,SAXZ,SAeTC,KAAM8H,KAAK,cAAe5J,EAAO0B,GAfxB,gBAevBM,EAfuB,EAevBA,KAEPT,EAAS,CACL3D,KAAM5B,GACN8B,QAASkE,IAnBiB,kDAuB9BT,EAAS,CACL3D,KAAM1B,GACN4B,QAAS,KAAMmE,UAAY,KAAMA,SAASD,KAAKE,QAAU,KAAMD,SAASD,KAAKE,QAAU,KAAMA,UAzBnE,0DAAX,wDI0BVuM,CAAY,CACjBvO,WAAYvB,EAAKC,UACjBC,gBAAiBF,EAAKE,gBACtBO,cAAeT,EAAKS,cACpBiP,WAAY1P,EAAK0P,WACjBC,cAAe3P,EAAK2P,cACpBC,SAAU5P,EAAK4P,SACfhC,WAAY5N,EAAK4N,eA4FG,yCClBjBmC,GApGW,SAAC,GAAsB,IAArBtM,EAAoB,EAApBA,QAClBgF,EADsC,EAAXgB,MACRC,OAAOjB,YAAc,EAExC7F,EAAWkC,cAEXjG,EAAckG,aAAY,SAAAjG,GAAK,OAAIA,EAAMD,eACxCK,EAAyCL,EAAzCK,QAASI,EAAgCT,EAAhCS,MAAOP,EAAyBF,EAAzBE,SAAUK,EAAeP,EAAfO,MAAOC,EAAQR,EAARQ,KAElCK,EAAgBqF,aAAY,SAAAjG,GAAK,OAAIA,EAAMY,iBACjCsQ,EAA6DtQ,EAAtER,QAA+B+Q,EAAuCvQ,EAA9CJ,MAA6B4Q,EAAiBxQ,EAA1BC,QAE7CC,EAAgBmF,aAAY,SAAAjG,GAAK,OAAIA,EAAMc,iBACjCuQ,EAAsFvQ,EAA/FV,QAA+BkR,EAAgExQ,EAAvEN,MAA6B+Q,EAA0CzQ,EAAnDD,QAAiC2Q,EAAkB1Q,EAA3BJ,QAGpEmB,EADWoE,aAAY,SAAAjG,GAAK,OAAIA,EAAM4B,aACtCC,SAEPiI,qBAAU,WACNhG,EAAS,CAAC3D,KAAMtE,IAEZgG,EAASuF,SACTzC,EAAQS,KAAK,UAGdmM,EACC5M,EAAQS,KAAR,yBAA+BoM,EAAezJ,IAA9C,UAEAjE,EAAS4F,GAAa,GAAIC,MAE/B,CAAC7F,EAAUa,EAAS9C,EAAUuP,EAAeG,EAAeC,EAAgB7H,IAE/E,IAIM8H,EAAe,SAAC5N,GACf6N,OAAOC,QAAQ,kDACd7N,EhBNiB,SAACD,GAAD,gDAAQ,WAAOC,EAAUC,GAAjB,oBAAAC,EAAA,sEAE7BF,EAAS,CACL3D,KAAM5E,IAHmB,EAMOwI,IAAflC,EANQ,EAMrBD,UAAaC,SAEfoC,EAAS,CACXC,QAAS,CACLC,cAAc,UAAD,OAAYtC,EAASuC,SAVb,SAcvBC,KAAMuN,OAAN,wBAA8B/N,GAAMI,GAdb,OAgB7BH,EAAS,CACL3D,KAAM3E,IAjBmB,gDAqB7BsI,EAAS,CACL3D,KAAM1E,EACN4E,QAAS,KAAMmE,UAAY,KAAMA,SAASD,KAAKE,QAAU,KAAMD,SAASD,KAAKE,QAAU,KAAMA,UAvBpE,yDAAR,wDgBMRoN,CAAchO,KAI/B,OACI,qCACI,eAACyD,GAAA,EAAD,CAAK1B,UAAU,qBAAf,UACI,cAAC2B,GAAA,EAAD,UACI,4CAEJ,cAACA,GAAA,EAAD,CAAK3B,UAAU,aAAf,SACI,eAACC,GAAA,EAAD,CAAQD,UAAU,OAAOsB,QAjBZ,WACzBpD,EhB2BqB,yCAAM,WAAOA,EAAUC,GAAjB,wBAAAC,EAAA,sEAE3BF,EAAS,CACL3D,KAAMzE,IAHiB,EAMSqI,IAAflC,EANM,EAMnBD,UAAaC,SAEfoC,EAAS,CACXC,QAAS,CACLC,cAAc,UAAD,OAAYtC,EAASuC,SAVf,SAcNC,KAAM8H,KAAN,gBAA4B,GAAIlI,GAd1B,gBAcpBM,EAdoB,EAcpBA,KAEPT,EAAS,CACL3D,KAAMxE,EACN0E,QAASkE,IAlBc,kDAsB3BT,EAAS,CACL3D,KAAMvE,EACNyE,QAAS,KAAMmE,UAAY,KAAMA,SAASD,KAAKE,QAAU,KAAMD,SAASD,KAAKE,QAAU,KAAMA,UAxBtE,0DAAN,0DgBXT,UACI,mBAAGmB,UAAU,gBADjB,8BAKPsL,GAAiB,cAAC,GAAD,IACjBC,GAAe,cAAC,GAAD,CAASrL,QAAQ,SAAjB,SAA2BqL,IAC1CE,GAAiB,cAAC,GAAD,IACjBC,GAAe,cAAC,GAAD,CAASxL,QAAQ,SAAjB,SAA2BwL,IAC1ClR,EAAU,cAAC,GAAD,IAAaI,EAAQ,cAAC,GAAD,CAASsF,QAAQ,SAAjB,SAA2BtF,IACvD,qCACA,eAACiO,GAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,YAAU,EAACjJ,UAAU,WAAnD,UACI,gCACI,+BACI,oCACA,uCACA,sCACA,uCACA,0CACA,4BAGR,gCACK3F,EAASwB,KAAI,SAAAf,GAAO,OACjB,+BACI,6BAAKA,EAAQqH,MACb,6BAAKrH,EAAQoR,QACb,6BAAKpR,EAAQ6E,OACb,oCAAO7E,EAAQ+H,SACf,6BAAK/H,EAAQqR,WAEb,+BACI,cAAC,iBAAD,CAAexL,GAAE,yBAAoB7F,EAAQqH,IAA5B,SAAjB,SACI,cAAClC,GAAA,EAAD,CAAQC,QAAQ,QAAQF,UAAU,SAAlC,SACI,mBAAGA,UAAU,oBAGrB,cAACC,GAAA,EAAD,CAAQC,QAAQ,SAASF,UAAU,SAASsB,QAAS,kBAAMuK,EAAa/Q,EAAQqH,MAAhF,SACI,mBAAGnC,UAAU,wBAdhBlF,EAAQqH,aAqB7B,cAAC,GAAD,CAAUzH,MAAOA,EAAOC,KAAMA,EAAM6G,SAAS,WCqC9C4K,GAjIW,SAAC,GAAsB,IAArBrH,EAAoB,EAApBA,MAAOhG,EAAa,EAAbA,QACzBuH,EAAYvB,EAAMC,OAAO/G,GADa,EAGpBe,mBAAS,IAHW,oBAGrCW,EAHqC,KAG/ByI,EAH+B,OAIlBpJ,mBAAS,IAJS,oBAIrCkN,EAJqC,KAI9BG,EAJ8B,OAKlBrN,mBAAS,IALS,oBAKrCsD,EALqC,KAK9BgK,EAL8B,OAMlBtN,mBAAS,GANS,oBAMrC6D,EANqC,KAM9B0J,EAN8B,OAONvN,mBAAS,IAPH,oBAOrC0F,EAPqC,KAOxB8H,EAPwB,OAQJxN,mBAAS,GARL,oBAQrCgH,EARqC,KAQvByG,EARuB,OASZzN,mBAAS,IATG,oBASrCmN,EATqC,KAS3BO,EAT2B,OAUV1N,oBAAS,GAVC,oBAUrC2N,EAVqC,KAU1BC,EAV0B,KAYtC1O,EAAWkC,cAEXvF,EAAiBwF,aAAY,SAAAjG,GAAK,OAAIA,EAAMS,kBAC3CL,EAA2BK,EAA3BL,QAASI,EAAkBC,EAAlBD,MAAOE,EAAWD,EAAXC,QAEjBK,EAAgBkF,aAAY,SAAAjG,GAAK,OAAIA,EAAMe,iBACjC0R,EAA6D1R,EAAtEX,QAA+BsS,EAAuC3R,EAA9CP,MAA6BmS,EAAiB5R,EAA1BF,QAEnDiJ,qBAAU,WACH6I,GACC7O,EAAS,CAAC3D,KAAMlE,IAChB0I,EAAQS,KAAK,uBAET1E,EAAQ6E,MAAQ7E,EAAQqH,MAAQmE,GAG5B8B,EAAQtN,EAAQ6E,MAChB0M,EAASvR,EAAQoR,OACjBK,EAASzR,EAAQ+H,OACjByJ,EAASxR,EAAQwH,OACjBoK,EAAY5R,EAAQqR,UACpBK,EAAe1R,EAAQ4J,aACvB+H,EAAgB3R,EAAQkL,eAR5B9H,EAAS8F,GAAmBsC,MAWrC,CAACxL,EAASwL,EAAWpI,EAAUa,EAASgO,IAE3C,IAAMC,EAAiB,yCAAG,WAAO3N,GAAP,wBAAAjB,EAAA,6DAChB6O,EAAO5N,EAAEQ,OAAOqN,MAAM,IACtBC,EAAW,IAAIC,UACZC,OAAO,QAASJ,GACzBL,GAAa,GAJS,SAOdvO,EAAS,CACbC,QAAS,CACP,eAAgB,wBATA,SAaGG,KAAM8H,KAAK,cAAe4G,EAAU9O,GAbvC,gBAaZM,EAbY,EAaZA,KAER2O,QAAQC,IAAI5O,GAEZ2N,EAAS3N,GACTiO,GAAa,GAlBO,kDAoBpBU,QAAQ1S,MAAR,MACAgS,GAAa,GArBO,0DAAH,sDAuCvB,OACI,qCACI,cAAC,QAAD,CAAMjM,GAAG,qBAAqBX,UAAU,qBAAxC,qBAGA,eAAC,GAAD,WACI,8CACC6M,GAAiB,cAAC,GAAD,IACjBC,GAAe,cAAC,GAAD,CAAS5M,QAAQ,SAAjB,SAA2B4M,IAC1CtS,EAAU,cAAC,GAAD,IAAaI,EAAQ,cAAC,GAAD,CAASsF,QAAQ,SAAjB,SAA2BtF,IACvD,eAACuE,GAAA,EAAD,CAAMC,SAxBE,SAACC,GACrBA,EAAEC,iBACFpB,EjBqBqB,SAACpD,GAAD,gDAAa,WAAOoD,EAAUC,GAAjB,wBAAAC,EAAA,sEAElCF,EAAS,CACL3D,KAAMrE,IAHwB,EAMEiI,IAAflC,EANa,EAM1BD,UAAaC,SAEfoC,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,OAAYtC,EAASuC,SAXR,SAebC,KAAMkK,IAAN,wBAA2B7N,EAAQqH,KAAOrH,EAASuD,GAftC,gBAe3BM,EAf2B,EAe3BA,KAEPT,EAAS,CACL3D,KAAMpE,EACNsE,QAASkE,IAnBqB,kDAuBlCT,EAAS,CACL3D,KAAMnE,EACNqE,QAAS,KAAMmE,UAAY,KAAMA,SAASD,KAAKE,QAAU,KAAMD,SAASD,KAAKE,QAAU,KAAMA,UAzB/D,0DAAb,wDiBrBZ2O,CAAc,CACnBrL,IAAKmE,EACL3G,OACAuM,QACAC,WACAtJ,QACA6B,cACApC,QACA0D,mBAcQ,UACA,eAAC7G,GAAA,EAAKqH,MAAN,CAAYC,UAAU,OAAtB,UACI,cAACtH,GAAA,EAAKuH,MAAN,mBACA,cAACvH,GAAA,EAAKO,QAAN,CAAcnF,KAAK,OAAOwF,YAAY,iBAAiBD,MAAOH,EAAMC,SAAU,SAACP,GAAD,OAAO+I,EAAQ/I,EAAEQ,OAAOC,aAE1G,eAACX,GAAA,EAAKqH,MAAN,CAAYC,UAAU,QAAtB,UACI,cAACtH,GAAA,EAAKuH,MAAN,oBACA,cAACvH,GAAA,EAAKO,QAAN,CAAcnF,KAAK,SAASwF,YAAY,kBAAkBD,MAAO+C,EAAOjD,SAAU,SAACP,GAAD,OAAOkN,EAASlN,EAAEQ,OAAOC,aAE9G,eAACX,GAAA,EAAKqH,MAAN,CAAYC,UAAU,QAAtB,UACG,cAACtH,GAAA,EAAKuH,MAAN,oBACA,cAACvH,GAAA,EAAKqL,MAAN,CAAYjQ,KAAK,OAAOwF,YAAY,sBAAsBD,MAAOwC,EAAO1C,SAAU,SAACP,GAAD,OAAOiN,EAASjN,EAAEQ,OAAOC,UAC3G,cAACX,GAAA,EAAKsO,KAAN,CAAWxP,GAAG,aAAawM,MAAM,cAAciD,QAAM,EAAC9N,SAAUoN,IAC/DL,GAAa,cAAC,GAAD,OAElB,eAACxN,GAAA,EAAKqH,MAAN,CAAYC,UAAU,QAAtB,UACI,cAACtH,GAAA,EAAKuH,MAAN,oBACA,cAACvH,GAAA,EAAKO,QAAN,CAAcnF,KAAK,OAAOwF,YAAY,kBAAkBD,MAAOoM,EAAOtM,SAAU,SAACP,GAAD,OAAOgN,EAAShN,EAAEQ,OAAOC,aAE7G,eAACX,GAAA,EAAKqH,MAAN,CAAYC,UAAU,WAAtB,UACI,cAACtH,GAAA,EAAKuH,MAAN,uBACA,cAACvH,GAAA,EAAKO,QAAN,CAAcnF,KAAK,OAAOwF,YAAY,qBAAqBD,MAAOqM,EAAUvM,SAAU,SAACP,GAAD,OAAOqN,EAAYrN,EAAEQ,OAAOC,aAEtH,eAACX,GAAA,EAAKqH,MAAN,CAAYC,UAAU,cAAtB,UACI,cAACtH,GAAA,EAAKuH,MAAN,0BACA,cAACvH,GAAA,EAAKO,QAAN,CAAcnF,KAAK,OAAOwF,YAAY,wBAAwBD,MAAO4E,EAAa9E,SAAU,SAACP,GAAD,OAAOmN,EAAenN,EAAEQ,OAAOC,aAE/H,eAACX,GAAA,EAAKqH,MAAN,CAAYC,UAAU,eAAtB,UACI,cAACtH,GAAA,EAAKuH,MAAN,6BACA,cAACvH,GAAA,EAAKO,QAAN,CAAcnF,KAAK,SAASwF,YAAY,2BAA2BD,MAAOkG,EAAcpG,SAAU,SAACP,GAAD,OAAOoN,EAAgBpN,EAAEQ,OAAOC,aAEtI,cAACG,GAAA,EAAD,CAAQ1F,KAAK,SAAS2F,QAAQ,UAA9B,8B,SCsDLyN,GA7KK,SAAC,GAAsB,IAoBlB9C,EApBH9F,EAAoB,EAApBA,MAAOhG,EAAa,EAAbA,QACnB6O,EAAU7I,EAAMC,OAAO/G,GADS,EAGNe,oBAAS,GAHH,oBAG/B6O,EAH+B,KAGrBC,EAHqB,KAKhC5P,EAAWkC,cAGVnE,EADWoE,aAAY,SAAAjG,GAAK,OAAIA,EAAM4B,aACtCC,SAEDW,EAAeyD,aAAY,SAACjG,GAAD,OAAWA,EAAMwC,gBAC3CD,EAAyBC,EAAzBD,MAAOnC,EAAkBoC,EAAlBpC,QAASI,EAASgC,EAAThC,MAEjBkC,EAAWuD,aAAY,SAACjG,GAAD,OAAWA,EAAM0C,YAC9BiR,EAAmCjR,EAA5CtC,QAA8BwT,EAAclR,EAAvB7B,QAEtB8B,EAAesD,aAAY,SAACjG,GAAD,OAAWA,EAAM2C,gBAClCkR,EAA2ClR,EAApDvC,QAAkC0T,EAAkBnR,EAA3B9B,QAEhC,IAAIT,EAAS,CAKbmC,EAAMqO,YAJeH,EAIUlO,EAAME,WAAW0K,QAAO,SAACC,EAAK/L,GAAN,OAAe+L,EAAM/L,EAAKoH,MAAQpH,EAAK6J,MAAK,GAAGmC,QAAQ,IAHlGqD,KAAKC,MAAY,IAANF,GAAY,KAAKpD,QAAQ,IAMhDvD,qBAAU,WACFjI,GACA8C,EAAQS,KAAK,UAGjB,IPVwBvB,EOUlBkQ,EAAe,yCAAG,iCAAA/P,EAAA,sEACWK,KAAMC,IAAI,sBADrB,gBACP0P,EADO,EACbzP,MACD0P,EAASC,SAASC,cAAc,WAC/BhU,KAAO,kBACd8T,EAAOhM,IAAP,kDAAwD+L,GACxDC,EAAOG,OAAQ,EACfH,EAAOI,OAAS,WAAOX,GAAY,IACnCQ,SAASI,KAAKC,YAAYN,GAPN,4CAAH,sDAUjB1R,GAASA,EAAMwF,MAAQyL,GAAWI,GAAcE,GAChDhQ,EAAS,CAAC3D,KAAMnB,KAChB8E,EAAS,CAAC3D,KAAMP,KAChBkE,GPvBoBD,EOuBK2P,EPvBN,yCAAQ,WAAO1P,EAAUC,GAAjB,wBAAAC,EAAA,sEAE/BF,EAAS,CACL3D,KAAMxB,KAHqB,EAMKoF,IAAflC,EANU,EAMvBD,UAAaC,SAEfoC,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,OAAYtC,EAASuC,SAXX,SAeVC,KAAMC,IAAN,sBAAyBT,GAAMI,GAfrB,gBAexBM,EAfwB,EAexBA,KAEPT,EAAS,CACL3D,KAAMzB,GACN2B,QAASkE,IAnBkB,kDAuB/BT,EAAS,CACL3D,KAAMvB,GACNyB,QAAS,KAAMmE,UAAY,KAAMA,SAASD,KAAKE,QAAU,KAAMD,SAASD,KAAKE,QAAU,KAAMA,UAzBlE,0DAAR,2DOwBXlC,EAAMwM,OAGd2E,GAAY,GAFZK,MAIL,CAACjQ,EAAUvB,EAAOiR,EAASI,EAAYE,IAU1C,OACI1T,EAAU,cAAC,GAAD,IAAaI,EAAQ,cAAC,GAAD,CAASsF,QAAQ,SAAjB,SAA2BtF,IACtD,qCACA,wCAAW+B,EAAMwF,OACjB,eAACT,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,CAAKuD,GAAI,EAAT,SACI,eAACa,GAAA,EAAD,CAAW7F,QAAQ,QAAnB,UACI,eAAC6F,GAAA,EAAU1E,KAAX,WACI,0CACA,8BACI,4CAAwB1E,EAAMP,KAAKuD,QAEvC,8BACI,6CAAwB,mBAAGiP,KAAI,iBAAYjS,EAAMP,KAAKyL,OAA9B,SAAyClL,EAAMP,KAAKyL,WAEhF,8BACI,+CACClL,EAAMnB,gBAAgBqO,QAF3B,IAEqC,IAAKlN,EAAMnB,gBAAgBuO,KAFhE,IAGK,IAAKpN,EAAMnB,gBAAgByO,WAHhC,IAIK,IAAKtN,EAAMnB,gBAAgB2O,WAE/BxN,EAAM0M,YAAc,eAAC,GAAD,CAASnJ,QAAQ,UAAjB,2BAA0CvD,EAAM2M,eAAyB,cAAC,GAAD,CAASpJ,QAAQ,SAAjB,kCAGlG,eAAC6F,GAAA,EAAU1E,KAAX,WACI,gDACA,8BACI,8CACC1E,EAAMZ,iBAEVY,EAAMwM,OAAS,eAAC,GAAD,CAASjJ,QAAQ,UAAjB,sBAAqCvD,EAAMyM,UAAoB,cAAC,GAAD,CAASlJ,QAAQ,SAAjB,6BAGnF,eAAC6F,GAAA,EAAU1E,KAAX,WACI,6CAC6B,IAA5B1E,EAAME,WAAWqJ,OAAe,cAAC,GAAD,kCAC7B,cAACH,GAAA,EAAD,CAAW7F,QAAQ,QAAnB,SACCvD,EAAME,WAAWhB,KAAI,SAACJ,EAAM0P,GAAP,OAClB,cAACpF,GAAA,EAAU1E,KAAX,UACI,eAACK,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,CAAKuD,GAAI,EAAT,SACI,cAACb,GAAA,EAAD,CAAOhC,IAAK5G,EAAK6G,MAAOgC,IAAK7I,EAAKkE,KAAM4E,OAAK,EAAC+C,SAAO,MAEzD,cAAC3F,GAAA,EAAD,UACI,cAAC,QAAD,CAAMhB,GAAE,mBAAclF,EAAKX,SAA3B,SAAuCW,EAAKkE,SAEhD,eAACgC,GAAA,EAAD,CAAKuD,GAAI,EAAT,UACKzJ,EAAK6J,IADV,OACmB7J,EAAKoH,MADxB,QACoCpH,EAAK6J,IAAM7J,EAAKoH,OAAO4E,QAAQ,UATtD0D,gBAmBzC,cAACxJ,GAAA,EAAD,CAAKuD,GAAI,EAAT,SACI,cAAChD,GAAA,EAAD,UACI,eAAC6D,GAAA,EAAD,CAAW7F,QAAQ,QAAnB,UACI,cAAC6F,GAAA,EAAU1E,KAAX,UACI,iDAEJ,cAAC0E,GAAA,EAAU1E,KAAX,UACI,eAACK,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,oBACA,eAACA,GAAA,EAAD,eAAOhF,EAAMqO,mBAGrB,cAACjF,GAAA,EAAU1E,KAAX,UACI,eAACK,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,uBACA,eAACA,GAAA,EAAD,eAAOhF,EAAMsO,sBAGrB,cAAClF,GAAA,EAAU1E,KAAX,UACI,eAACK,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,wBACA,eAACA,GAAA,EAAD,eAAOhF,EAAMuO,iBAGrB,cAACnF,GAAA,EAAU1E,KAAX,UACI,eAACK,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,oBACA,eAACA,GAAA,EAAD,eAAOhF,EAAMuM,oBAGnBvM,EAAMwM,QACJ,eAACpD,GAAA,EAAU1E,KAAX,WACK0M,GAAc,cAAC,GAAD,IACbF,EACE,cAAC,gBAAD,CAAcgB,OAAQlS,EAAMuM,WAAY4F,UAnG9C,SAACC,GAC3B7Q,EPFgB,SAAC0P,EAASmB,GAAV,gDAA4B,WAAO7Q,EAAUC,GAAjB,wBAAAC,EAAA,sEAE5CF,EAAS,CACL3D,KAAMpB,KAHkC,EAMRgF,IAAflC,EANuB,EAMpCD,UAAaC,SAEfoC,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,OAAYtC,EAASuC,SAXE,SAevBC,KAAMkK,IAAN,sBAAyBiF,EAAzB,QAAwCmB,EAAe1Q,GAfhC,gBAerCM,EAfqC,EAerCA,KAEPT,EAAS,CACL3D,KAAMtB,GACNwB,QAASkE,IAnB+B,kDAuB5CT,EAAS,CACL3D,KAAMrB,GACNuB,QAAS,KAAMmE,UAAY,KAAMA,SAASD,KAAKE,QAAU,KAAMD,SAASD,KAAKE,QAAU,KAAMA,UAzBrD,0DAA5B,wDOEPmQ,CAASpB,EAASmB,OAiGe,cAAC,GAAD,OAKrBd,GAAkB,cAAC,GAAD,IAClBhS,GAAYA,EAASuF,SAAW7E,EAAMwM,SAAWxM,EAAM0M,aACpD,cAACtD,GAAA,EAAU1E,KAAX,UACI,cAACpB,GAAA,EAAD,CAAQ1F,KAAK,SAASyF,UAAU,gBAAgBsB,QAtGzD,WACnBpD,EPwBoB,SAACvB,GAAD,gDAAW,WAAOuB,EAAUC,GAAjB,wBAAAC,EAAA,sEAE/BF,EAAS,CACL3D,KAAMT,KAHqB,EAMKqE,IAAflC,EANU,EAMvBD,UAAaC,SAEfoC,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,OAAYtC,EAASuC,SAXX,SAeVC,KAAMkK,IAAN,sBAAyBhM,EAAMwF,IAA/B,YAA8C,GAAI9D,GAfxC,gBAexBM,EAfwB,EAexBA,KAEPT,EAAS,CACL3D,KAAMV,GACNY,QAASkE,IAnBkB,kDAuB/BT,EAAS,CACL3D,KAAMR,GACNU,QAAS,KAAMmE,UAAY,KAAMA,SAASD,KAAKE,QAAU,KAAMD,SAASD,KAAKE,QAAU,KAAMA,UAzBlE,0DAAX,wDOxBXoQ,CAAatS,KAqGM,+CC9FrBuS,GApES,SAAC,GAAe,IAAdnQ,EAAa,EAAbA,QAChBb,EAAWkC,cAEXlD,EAAYmD,aAAY,SAAAjG,GAAK,OAAIA,EAAM8C,aACtC1C,EAA0B0C,EAA1B1C,QAASI,EAAiBsC,EAAjBtC,MAAOqC,EAAUC,EAAVD,OAGhBhB,EADWoE,aAAY,SAAAjG,GAAK,OAAIA,EAAM4B,aACtCC,SAUP,OARAiI,qBAAU,WACHjI,GAAYA,EAASuF,QACpBtD,ERsIc,yCAAM,WAAOA,EAAUC,GAAjB,wBAAAC,EAAA,sEAExBF,EAAS,CACL3D,KAAMb,KAHc,EAMYyE,IAAflC,EANG,EAMhBD,UAAaC,SAEfoC,EAAS,CACXC,QAAS,CACLC,cAAc,UAAD,OAAYtC,EAASuC,SAVlB,SAcHC,KAAMC,IAAN,cAAyBL,GAdtB,gBAcjBM,EAdiB,EAcjBA,KAEPT,EAAS,CACL3D,KAAMd,GACNgB,QAASkE,IAlBW,kDAsBxBT,EAAS,CACL3D,KAAMZ,GACNc,QAAS,KAAMmE,UAAY,KAAMA,SAASD,KAAKE,QAAU,KAAMD,SAASD,KAAKE,QAAU,KAAMA,UAxBzE,0DAAN,yDQpIdE,EAAQS,KAAK,YAElB,CAACtB,EAAUa,EAAS9C,IAGnB,qCACI,wCACCzB,EAAU,cAAC,GAAD,IAAaI,EAAQ,cAAC,GAAD,CAASsF,QAAQ,SAAjB,SAA2BtF,IACvD,eAACiO,GAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,YAAU,EAACjJ,UAAU,WAAnD,UACI,gCACI,+BACI,0CACA,sCACA,yCACA,2CACA,6CACA,sCACA,2CACA,4BAGR,gCACK/C,EAAOpB,KAAI,SAAAc,GAAK,OACb,+BACI,6BAAKA,EAAMwF,MACX,6BAAKxF,EAAMyJ,UAAUC,UAAU,EAAG,MAClC,6BAAK1J,EAAMP,MAAQO,EAAMP,KAAK+F,MAC9B,6BAAKxF,EAAMP,MAAQO,EAAMP,KAAKuD,OAC9B,oCAAOhD,EAAMuM,cACb,6BAAKvM,EAAMwM,OACPxM,EAAMyM,OAAO/C,UAAU,EAAG,IAE1B,mBAAGrG,UAAU,eAAe+B,MAAO,CAACD,MAAO,WAE/C,6BAAKnF,EAAM0M,YACP1M,EAAM2M,YAAYjD,UAAU,EAAG,IAE/B,mBAAGrG,UAAU,eAAe+B,MAAO,CAACD,MAAO,WAE/C,6BACI,cAAC,iBAAD,CAAenB,GAAE,iBAAYhE,EAAMwF,KAAnC,SACQ,cAAClC,GAAA,EAAD,CAAQC,QAAQ,QAAQF,UAAU,SAAlC,2BAlBPrD,EAAMwF,iBCmC5BgN,GAvEQ,SAAC,GAAe,IAAdpQ,EAAa,EAAbA,QACfb,EAAWkC,cAEX9D,EAAW+D,aAAY,SAAAjG,GAAK,OAAIA,EAAMkC,YACrC9B,EAAyB8B,EAAzB9B,QAASI,EAAgB0B,EAAhB1B,MAAO2B,EAASD,EAATC,MAGhBN,EADWoE,aAAY,SAAAjG,GAAK,OAAIA,EAAM4B,aACtCC,SAGSuP,EADGnL,aAAY,SAAAjG,GAAK,OAAIA,EAAMoC,cACvCvB,QAEPiJ,qBAAU,WACHjI,GAAYA,EAASuF,QACpBtD,E7BgIa,yCAAM,WAAOA,EAAUC,GAAjB,wBAAAC,EAAA,sEAEvBF,EAAS,CACL3D,KAAMtC,KAHa,EAQjBkG,IADWlC,EAPM,EAOnBD,UAAaC,SAGToC,EAAS,CACbC,QAAS,CACPC,cAAc,UAAD,OAAYtC,EAASuC,SAZjB,SAeFC,KAAMC,IAAN,aAAwBL,GAftB,gBAehBM,EAfgB,EAehBA,KAEPT,EAAS,CACL3D,KAAMvC,GACNyC,QAASkE,IAnBU,kDAuBvBT,EAAS,CACL3D,KAAMrC,GACNuC,QAAS,KAAMmE,UAAY,KAAMA,SAASD,KAAKE,QAAU,KAAMD,SAASD,KAAKE,QAAU,KAAMA,UAzB1E,0DAAN,yD6B9HbE,EAAQS,KAAK,YAElB,CAACtB,EAAUa,EAAS9C,EAAUuP,IAEjC,IAAMK,EAAe,SAAC5N,GACf6N,OAAOC,QAAQ,+CACd7N,E7BsJc,SAACD,GAAD,gDAAQ,WAAOC,EAAUC,GAAjB,oBAAAC,EAAA,sEAE1BF,EAAS,CACL3D,KAAMlC,KAHgB,EAQpB8F,IADWlC,EAPS,EAOtBD,UAAaC,SAGToC,EAAS,CACbC,QAAS,CACPC,cAAc,UAAD,OAAYtC,EAASuC,SAZd,SAgBpBC,KAAMuN,OAAN,qBAA2B/N,GAAMI,GAhBb,OAkB1BH,EAAS,CACL3D,KAAMnC,KAnBgB,gDAuB1B8F,EAAS,CACL3D,KAAMjC,GACNmC,QAAS,KAAMmE,UAAY,KAAMA,SAASD,KAAKE,QAAU,KAAMD,SAASD,KAAKE,QAAU,KAAMA,UAzBvE,yDAAR,wD6BtJLuQ,CAAWnR,KAI5B,OACI,qCACI,uCACCzD,EAAU,cAAC,GAAD,IAAaI,EAAQ,cAAC,GAAD,CAASsF,QAAQ,SAAjB,SAA2BtF,IACvD,eAACiO,GAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,YAAU,EAACjJ,UAAU,WAAnD,UACI,gCACI,+BACI,oCACA,sCACA,uCACA,uCACA,4BAGR,gCACKzD,EAAMV,KAAI,SAAAO,GAAI,OACX,+BACI,6BAAKA,EAAK+F,MACV,6BAAK/F,EAAKuD,OACV,6BAAI,mBAAGiP,KAAI,iBAAYxS,EAAKyL,OAAxB,SAAkCzL,EAAKyL,UAC3C,6BAAKzL,EAAKoF,QACN,mBAAGxB,UAAU,eAAe+B,MAAO,CAACD,MAAO,WAE3C,mBAAG9B,UAAU,eAAe+B,MAAO,CAACD,MAAO,WAE/C,+BACI,cAAC,iBAAD,CAAenB,GAAE,sBAAiBvE,EAAK+F,IAAtB,SAAjB,SACI,cAAClC,GAAA,EAAD,CAAQC,QAAQ,QAAQF,UAAU,SAAlC,SACI,mBAAGA,UAAU,oBAGrB,cAACC,GAAA,EAAD,CAAQC,QAAQ,SAASF,UAAU,SAASsB,QAAS,kBAAMuK,EAAazP,EAAK+F,MAA7E,SACI,mBAAGnC,UAAU,wBAhBhB5D,EAAK+F,iBCyC3BkN,GAjFQ,SAAC,GAAsB,IAArBtK,EAAoB,EAApBA,MAAOhG,EAAa,EAAbA,QACtBuQ,EAASvK,EAAMC,OAAO/G,GADa,EAGjBe,mBAAS,IAHQ,oBAGlCW,EAHkC,KAG5ByI,EAH4B,OAIfpJ,mBAAS,IAJM,oBAIlC6I,EAJkC,KAI3BC,EAJ2B,OAKX9I,oBAAS,GALE,oBAKlCwC,EALkC,KAKzB+N,EALyB,KAWnCrR,EAAWkC,cAEXjE,EAAckE,aAAY,SAAAjG,GAAK,OAAIA,EAAM+B,eACxC3B,EAAwB2B,EAAxB3B,QAASI,EAAeuB,EAAfvB,MAAOwB,EAAQD,EAARC,KAEjBK,EAAa4D,aAAY,SAAAjG,GAAK,OAAIA,EAAMqC,cAC9BoQ,EAA6DpQ,EAAtEjC,QAA+BsS,EAAuCrQ,EAA9C7B,MAA6BmS,EAAiBtQ,EAA1BxB,QAEnDiJ,qBAAU,WACH6I,GACC7O,EAAS,CAAC3D,KAAM7B,KAChBqG,EAAQS,KAAK,oBAETpD,EAAKuD,MAAQvD,EAAK+F,MAAQmN,GAGvBlH,EAAQhM,EAAKuD,MACbmI,EAAS1L,EAAKyL,OACd0H,EAAWnT,EAAKoF,UAJnBtD,EAASF,GAAesR,MAOjC,CAAClT,EAAMkT,EAAQpR,EAAUa,EAASgO,IAOrC,OACI,qCACI,cAAC,QAAD,CAAMpM,GAAG,kBAAkBX,UAAU,qBAArC,qBAGA,eAAC,GAAD,WACI,2CACC6M,GAAiB,cAAC,GAAD,IACjBC,GAAe,cAAC,GAAD,CAAS5M,QAAQ,SAAjB,SAA2B4M,IAC1CtS,EAAU,cAAC,GAAD,IAAaI,EAAQ,cAAC,GAAD,CAASsF,QAAQ,SAAjB,SAA2BtF,IACvD,eAACuE,GAAA,EAAD,CAAMC,SAfA,SAACC,GACnBA,EAAEC,iBACFpB,E9BoKkB,SAAC9B,GAAD,gDAAU,WAAO8B,EAAUC,GAAjB,wBAAAC,EAAA,sEAE5BF,EAAS,CACL3D,KAAM/B,KAHkB,EAQtB2F,IADWlC,EAPW,EAOxBD,UAAaC,SAGToC,EAAS,CACbC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,OAAYtC,EAASuC,SAbd,SAgBPC,KAAMkK,IAAN,qBAAwBvM,EAAK+F,KAAM/F,EAAMiC,GAhBlC,gBAgBrBM,EAhBqB,EAgBrBA,KAEPT,EAAS,CACL3D,KAAMhC,KAEV2F,EAAS,CACL3D,KAAM/C,EAAsBiD,QAASkE,IAtBb,kDA0B5BT,EAAS,CACL3D,KAAM9B,GACNgC,QAAS,KAAMmE,UAAY,KAAMA,SAASD,KAAKE,QAAU,KAAMD,SAASD,KAAKE,QAAU,KAAMA,UA5BrE,0DAAV,wD8BpKT2Q,CAAW,CAACrN,IAAKmN,EAAQ3P,OAAMkI,QAAOrG,cAanC,UACA,eAACrC,GAAA,EAAKqH,MAAN,CAAYC,UAAU,OAAtB,UACI,cAACtH,GAAA,EAAKuH,MAAN,mBACA,cAACvH,GAAA,EAAKO,QAAN,CAAcnF,KAAK,OAAOwF,YAAY,kBAAkBD,MAAOH,EAAMC,SAAU,SAACP,GAAD,OAAO+I,EAAQ/I,EAAEQ,OAAOC,aAE3G,eAACX,GAAA,EAAKqH,MAAN,CAAYC,UAAU,QAAtB,UACI,cAACtH,GAAA,EAAKuH,MAAN,4BACA,cAACvH,GAAA,EAAKO,QAAN,CAAcnF,KAAK,QAAQwF,YAAY,2BAA2BD,MAAO+H,EAAOjI,SAAU,SAACP,GAAD,OAAOyI,EAASzI,EAAEQ,OAAOC,aAEtH,cAACX,GAAA,EAAKqH,MAAN,CAAYC,UAAU,UAAtB,SACG,cAACtH,GAAA,EAAKqL,MAAN,CAAYjQ,KAAK,WAAWkQ,MAAM,WAAWC,QAASlJ,EAAS5B,SAAU,SAACP,GAAD,OAAOkQ,EAAWlQ,EAAEQ,OAAO6K,cAExG,cAACzK,GAAA,EAAD,CAAQ1F,KAAK,SAAS2F,QAAQ,UAA9B,8BClBLuP,GAhCH,WACV,OACE,eAAC,iBAAD,WACE,cAAC,GAAD,IACA,sBAAMzP,UAAU,OAAhB,SACE,eAACU,GAAA,EAAD,WACA,cAAC,KAAD,CAAOgP,KAAK,aAAaC,UAAWhC,GAAaiC,OAAK,IACtD,cAAC,KAAD,CAAOF,KAAK,eAAeC,UAAWE,GAAeD,OAAK,IAC1D,cAAC,KAAD,CAAOF,KAAK,aAAaC,UAAW5I,KACpC,cAAC,KAAD,CAAO2I,KAAK,YAAYC,UAAW/F,GAAgBgG,OAAK,IACxD,cAAC,KAAD,CAAOF,KAAK,cAAcC,UAAWhF,GAAkBiF,OAAK,IAC5D,cAAC,KAAD,CAAOF,KAAK,WAAWC,UAAWrF,GAAesF,OAAK,IACtD,cAAC,KAAD,CAAOF,KAAK,WAAWC,UAAWG,KAClC,cAAC,KAAD,CAAOJ,KAAK,SAASC,UAAW/H,KAChC,cAAC,KAAD,CAAO8H,KAAK,YAAYC,UAAWxH,GAAgByH,OAAK,IACxD,cAAC,KAAD,CAAOF,KAAK,kBAAkBC,UAAWR,GAAgBS,OAAK,IAC9D,cAAC,KAAD,CAAOF,KAAK,mBAAmBC,UAAWT,GAAiBU,OAAK,IAChE,cAAC,KAAD,CAAOF,KAAK,uBAAuBC,UAAWN,GAAgBO,OAAK,IACnE,cAAC,KAAD,CAAOF,KAAK,qBAAqBC,UAAWtE,GAAmBuE,OAAK,IACpE,cAAC,KAAD,CAAOF,KAAK,iCAAiCC,UAAWtE,GAAmBuE,OAAK,IAChF,cAAC,KAAD,CAAOF,KAAK,0BAA0BC,UAAWvD,GAAmBwD,OAAK,IACzE,cAAC,KAAD,CAAOF,KAAK,mBAAmBC,UAAWI,GAAYH,OAAK,IAC3D,cAAC,KAAD,CAAOF,KAAK,oBAAoBC,UAAWI,GAAYH,OAAK,IAC5D,cAAC,KAAD,CAAOF,KAAK,oCAAoCC,UAAWI,GAAYH,OAAK,IAC5E,cAAC,KAAD,CAAOF,KAAK,IAAIC,UAAWI,GAAYH,OAAK,SAG9C,cAAC,GAAD,QCpCSI,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCEdQ,IAASzP,OACP,cAAC,IAAD,CAAUpD,MAAOA,GAAjB,SACE,cAAC,GAAD,MAEF0Q,SAASoC,eAAe,SAM1BV,M","file":"static/js/main.025a4c6a.chunk.js","sourcesContent":["export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\r\n\r\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\r\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\r\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\r\n\r\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\r\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\r\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\r\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\r\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\r\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\r\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\r\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\r\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'\r\n\r\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST'\r\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS'\r\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL'","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\r\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\r\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\r\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'","export const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\n\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\r\n\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\r\n\r\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\r\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\r\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\r\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\r\n\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\r\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\r\n\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\r\n\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'","export const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\r\nexport const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\r\n\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\r\n\r\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\r\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\r\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\r\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\r\n\r\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\r\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\r\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\r\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\r\n\r\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\r\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\r\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\r\nexport const ORDER_LIST_RESET = 'ORDER_LIST_RESET'\r\n\r\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\r\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\r\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\r\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'","import { createStore, combineReducers, applyMiddleware} from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport {composeWithDevTools} from 'redux-devtools-extension'\r\nimport {productListReducer, productDetailsReducer, productDeleteReducer, productCreateReducer, productUpdateReducer, productReviewCreateReducer, productTopRatedReducer} from './reducers/productReducers.js'\r\nimport {cartReducer} from './reducers/cartReducers'\r\nimport {userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer, userListReducer, userDeleteReducer, userUpdateReducer} from './reducers/userReducers'\r\nimport {orderCreateReducer, orderDetailsReducer, orderPayReducer, orderDeliverReducer, orderListMyReducer, orderListReducer} from './reducers/orderReducers'\r\n\r\nconst reducer = combineReducers({\r\n    productList: productListReducer,\r\n    productDetails: productDetailsReducer,\r\n    productDelete: productDeleteReducer,\r\n    productCreate: productCreateReducer,\r\n    productUpdate: productUpdateReducer,\r\n    productReviewCreate: productReviewCreateReducer,\r\n    productTopRated: productTopRatedReducer,\r\n    cart: cartReducer,\r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    userDetails: userDetailsReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n    userList: userListReducer,\r\n    userDelete: userDeleteReducer,\r\n    userUpdate: userUpdateReducer,\r\n    orderCreate: orderCreateReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    orderPay: orderPayReducer,\r\n    orderDeliver: orderDeliverReducer,\r\n    orderListMy: orderListMyReducer,\r\n    orderList: orderListReducer\r\n})\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : []\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {}\r\n\r\nconst inititalState = {\r\n    cart: {cartItems: cartItemsFromStorage, shippingAddress: shippingAddressFromStorage},\r\n    userLogin: { userInfo: userInfoFromStorage}\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(reducer, inititalState, composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\nexport default store","import {PRODUCT_LIST_FAIL, PRODUCT_LIST_SUCCESS, PRODUCT_LIST_REQUEST, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_DETAILS_FAIL, PRODUCT_DELETE_REQUEST, PRODUCT_DELETE_SUCCESS, PRODUCT_DELETE_FAIL, PRODUCT_CREATE_REQUEST, PRODUCT_CREATE_SUCCESS, PRODUCT_CREATE_FAIL, PRODUCT_CREATE_RESET, PRODUCT_UPDATE_REQUEST, PRODUCT_UPDATE_SUCCESS, PRODUCT_UPDATE_FAIL, PRODUCT_UPDATE_RESET, PRODUCT_CREATE_REVIEW_REQUEST, PRODUCT_CREATE_REVIEW_SUCCESS, PRODUCT_CREATE_REVIEW_FAIL, PRODUCT_CREATE_REVIEW_RESET, PRODUCT_TOP_REQUEST, PRODUCT_TOP_SUCCESS, PRODUCT_TOP_FAIL} from '../constants/productConstants'\r\n\r\nexport const productListReducer = (state = {products: []}, action) => {\r\n    switch(action.type) {\r\n        case PRODUCT_LIST_REQUEST:\r\n            return {loading: true, products: []}\r\n        case PRODUCT_LIST_SUCCESS:\r\n            return {loading: false, products: action.payload.products, pages: action.payload.pages, page: action.payload.page}\r\n        case PRODUCT_LIST_FAIL:\r\n            return {loading: false, error: action.payload}\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport const productDetailsReducer = (state = {product: { reviews: []}}, action) => {\r\n    switch(action.type) {\r\n        case PRODUCT_DETAILS_REQUEST:\r\n            return {loading: true, ...state }\r\n        case PRODUCT_DETAILS_SUCCESS:\r\n            return {loading: false, product: action.payload}\r\n        case PRODUCT_DETAILS_FAIL:\r\n            return {loading: false, error: action.payload}\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport const productDeleteReducer = (state = {}, action) => {\r\n    switch(action.type) {\r\n        case PRODUCT_DELETE_REQUEST:\r\n            return {loading: true }\r\n        case PRODUCT_DELETE_SUCCESS:\r\n            return {loading: false, success: true}\r\n        case PRODUCT_DELETE_FAIL:\r\n            return {loading: false, error: action.payload}\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport const productCreateReducer = (state = {}, action) => {\r\n    switch(action.type) {\r\n        case PRODUCT_CREATE_REQUEST:\r\n            return {loading: true }\r\n        case PRODUCT_CREATE_SUCCESS:\r\n            return {loading: false, success: true, product: action.payload}\r\n        case PRODUCT_CREATE_FAIL:\r\n            return {loading: false, error: action.payload}\r\n        case PRODUCT_CREATE_RESET:\r\n            return {}\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport const productUpdateReducer = (state = { product: {}}, action) => {\r\n    switch(action.type) {\r\n        case PRODUCT_UPDATE_REQUEST:\r\n            return {loading: true }\r\n        case PRODUCT_UPDATE_SUCCESS:\r\n            return {loading: false, success: true, product: action.payload}\r\n        case PRODUCT_UPDATE_FAIL:\r\n            return {loading: false, error: action.payload}\r\n        case PRODUCT_UPDATE_RESET:\r\n            return { product: {} }\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport const productReviewCreateReducer = (state = { }, action) => {\r\n    switch(action.type) {\r\n        case PRODUCT_CREATE_REVIEW_REQUEST:\r\n            return {loading: true }\r\n        case PRODUCT_CREATE_REVIEW_SUCCESS:\r\n            return {loading: false, success: true}\r\n        case PRODUCT_CREATE_REVIEW_FAIL:\r\n            return {loading: false, error: action.payload}\r\n        case PRODUCT_CREATE_REVIEW_RESET:\r\n            return { }\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport const productTopRatedReducer = (state = { products: [] }, action) => {\r\n    switch(action.type) {\r\n        case PRODUCT_TOP_REQUEST:\r\n            return {loading: true, products: [] }\r\n        case PRODUCT_TOP_SUCCESS:\r\n            return {loading: false, products: action.payload}\r\n        case PRODUCT_TOP_FAIL:\r\n            return {loading: false, error: action.payload}\r\n        default: return state\r\n    }\r\n}","import {CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_PAYMENT_METHOD, CART_SAVE_SHIPPING_ADDRESS} from '../constants/cartConstants'\r\n\r\nexport const cartReducer = (state = {cartItems: [], shippingAddress: {}}, action) => {\r\n    switch(action.type){\r\n        case CART_ADD_ITEM:\r\n            const item = action.payload\r\n\r\n            const existItem = state.cartItems.find(x => x.product === item.product)\r\n\r\n            if(existItem){\r\n                return {\r\n                    ...state,\r\n                    cartItems: state.cartItems.map(x => x.product === existItem.product ? item : x)\r\n                }\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    cartItems: [...state.cartItems, item]\r\n                }\r\n            }\r\n        case CART_REMOVE_ITEM:\r\n            return {\r\n                ...state,\r\n                cartItems: state.cartItems.filter(x => x.product !== action.payload)\r\n            }\r\n        case CART_SAVE_SHIPPING_ADDRESS:\r\n            return {\r\n                ...state,\r\n                shippingAddress: action.payload\r\n            }\r\n        case CART_SAVE_PAYMENT_METHOD:\r\n            return {\r\n                ...state,\r\n                paymentMethod: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { USER_DELETE_FAIL, USER_DELETE_REQUEST, USER_DELETE_SUCCESS, USER_DETAILS_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_RESET, USER_DETAILS_SUCCESS, USER_LIST_FAIL, USER_LIST_REQUEST, USER_LIST_RESET, USER_LIST_SUCCESS, USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_UPDATE_FAIL, USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_RESET, USER_UPDATE_PROFILE_SUCCESS, USER_UPDATE_REQUEST, USER_UPDATE_RESET, USER_UPDATE_SUCCESS } from \"../constants/userConstants\"\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n    switch(action.type) {\r\n        case USER_LOGIN_REQUEST:\r\n            return {loading: true}\r\n        case USER_LOGIN_SUCCESS:\r\n            return {loading: false, userInfo: action.payload}\r\n        case USER_LOGIN_FAIL:\r\n            return {loading: false, error: action.payload}\r\n        case USER_LOGOUT:\r\n            return {}\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n    switch(action.type) {\r\n        case USER_REGISTER_REQUEST:\r\n            return {loading: true}\r\n        case USER_REGISTER_SUCCESS:\r\n            return {loading: false, userInfo: action.payload}\r\n        case USER_REGISTER_FAIL:\r\n            return {loading: false, error: action.payload}\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport const userDetailsReducer = (state = {user: {}}, action) => {\r\n    switch(action.type) {\r\n        case USER_DETAILS_REQUEST:\r\n            return {...state, loading: true}\r\n        case USER_DETAILS_SUCCESS:\r\n            return {loading: false, user: action.payload}\r\n        case USER_DETAILS_FAIL:\r\n            return {loading: false, error: action.payload}\r\n        case USER_DETAILS_RESET:\r\n            return { user: {}}\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport const userUpdateProfileReducer = (state = {}, action) => {\r\n    switch(action.type) {\r\n        case USER_UPDATE_PROFILE_REQUEST:\r\n            return {loading: true}\r\n        case USER_UPDATE_PROFILE_SUCCESS:\r\n            return {loading: false, success: true, userInfo: action.payload}\r\n        case USER_UPDATE_PROFILE_FAIL:\r\n            return {loading: false, error: action.payload}\r\n        case USER_UPDATE_PROFILE_RESET:\r\n            return {}\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport const userListReducer = (state = {users: []}, action) => {\r\n    switch(action.type) {\r\n        case USER_LIST_REQUEST:\r\n            return {loading: true}\r\n        case USER_LIST_SUCCESS:\r\n            return {loading: false, users: action.payload}\r\n        case USER_LIST_FAIL:\r\n            return {loading: false, error: action.payload}\r\n        case USER_LIST_RESET:\r\n            return {users: []}\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport const userDeleteReducer = (state = {}, action) => {\r\n    switch(action.type) {\r\n        case USER_DELETE_REQUEST:\r\n            return {loading: true}\r\n        case USER_DELETE_SUCCESS:\r\n            return {loading: false, success: true}\r\n        case USER_DELETE_FAIL:\r\n            return {loading: false, error: action.payload}\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport const userUpdateReducer = (state = {user: {}}, action) => {\r\n    switch(action.type) {\r\n        case USER_UPDATE_REQUEST:\r\n            return {loading: true}\r\n        case USER_UPDATE_SUCCESS:\r\n            return {loading: false, success: true}\r\n        case USER_UPDATE_FAIL:\r\n            return {loading: false, error: action.payload}\r\n        case USER_UPDATE_RESET:\r\n            return {user: {}}\r\n        default: return state\r\n    }\r\n}","import {ORDER_CREATE_FAIL, ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_DELIVER_FAIL, ORDER_DELIVER_REQUEST, ORDER_DELIVER_RESET, ORDER_DELIVER_SUCCESS, ORDER_DETAILS_FAIL, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_LIST_FAIL, ORDER_LIST_MY_FAIL, ORDER_LIST_MY_REQUEST, ORDER_LIST_MY_RESET, ORDER_LIST_MY_SUCCESS, ORDER_LIST_REQUEST, ORDER_LIST_RESET, ORDER_LIST_SUCCESS, ORDER_PAY_FAIL, ORDER_PAY_REQUEST, ORDER_PAY_RESET, ORDER_PAY_SUCCESS} from '../constants/orderConstants'\r\n\r\nexport const orderCreateReducer = (state = {}, action) => {\r\n    switch(action.type) {\r\n        case ORDER_CREATE_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n        case ORDER_CREATE_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n                order: action.payload\r\n            }\r\n        case ORDER_CREATE_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderDetailsReducer = (state = {loading: true, orderItems: [], shippingAddress: {}}, action) => {\r\n    switch(action.type) {\r\n        case ORDER_DETAILS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case ORDER_DETAILS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                order: action.payload\r\n            }\r\n        case ORDER_DETAILS_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderPayReducer = (state = {}, action) => {\r\n    switch(action.type) {\r\n        case ORDER_PAY_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n        case ORDER_PAY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true\r\n            }\r\n        case ORDER_PAY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case ORDER_PAY_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderDeliverReducer = (state = {}, action) => {\r\n    switch(action.type) {\r\n        case ORDER_DELIVER_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n        case ORDER_DELIVER_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true\r\n            }\r\n        case ORDER_DELIVER_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case ORDER_DELIVER_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderListMyReducer = (state = {orders: []}, action) => {\r\n    switch(action.type) {\r\n        case ORDER_LIST_MY_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n        case ORDER_LIST_MY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload\r\n            }\r\n        case ORDER_LIST_MY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case ORDER_LIST_MY_RESET:\r\n            return {\r\n                orders: []\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderListReducer = (state = {orders: []}, action) => {\r\n    switch(action.type) {\r\n        case ORDER_LIST_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n        case ORDER_LIST_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload\r\n            }\r\n        case ORDER_LIST_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case ORDER_LIST_RESET:\r\n            return {\r\n                orders: []\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import axios from 'axios'\r\nimport { USER_DETAILS_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS, USER_DETAILS_RESET, USER_LIST_REQUEST, USER_LIST_SUCCESS, USER_LIST_FAIL, USER_LIST_RESET, USER_DELETE_REQUEST, USER_DELETE_SUCCESS, USER_DELETE_FAIL, USER_UPDATE_REQUEST, USER_UPDATE_SUCCESS, USER_UPDATE_FAIL } from \"../constants/userConstants\"\r\nimport {ORDER_LIST_MY_RESET} from '../constants/orderConstants'\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.post('/api/users/login', {email, password}, config)\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_REGISTER_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.post('/api/users', {name, email, password}, config)\r\n\r\n        dispatch({\r\n            type: USER_REGISTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const getUserProfile = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DETAILS_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n          } = getState()\r\n      \r\n          const config = {\r\n            headers: {\r\n              Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n          }\r\n        const {data} = await axios.get(`/api/users/${id}`, config)\r\n          \r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const logout = () => (dispatch) => {\r\n    localStorage.removeItem('userInfo')\r\n    dispatch({\r\n        type: USER_LOGOUT\r\n    })\r\n    dispatch({\r\n        type: USER_DETAILS_RESET\r\n    })\r\n    dispatch({\r\n        type: USER_LIST_RESET\r\n    })\r\n    dispatch({\r\n        type: ORDER_LIST_MY_RESET\r\n    })\r\n}\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n          } = getState()\r\n      \r\n          const config = {\r\n            headers: {\r\n              Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n          }\r\n        const {data} = await axios.put(`/api/users/profile`, user, config)\r\n          \r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LIST_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n          } = getState()\r\n      \r\n          const config = {\r\n            headers: {\r\n              Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n          }\r\n        const {data} = await axios.get(`/api/users`, config)\r\n          \r\n        dispatch({\r\n            type: USER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LIST_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DELETE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n          } = getState()\r\n      \r\n          const config = {\r\n            headers: {\r\n              Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n          }\r\n        \r\n        await axios.delete(`/api/users/${id}`, config)\r\n          \r\n        dispatch({\r\n            type: USER_DELETE_SUCCESS,\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DELETE_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n          } = getState()\r\n      \r\n          const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n          }\r\n        const {data} = await axios.put(`/api/users/${user._id}`,user, config)\r\n          \r\n        dispatch({\r\n            type: USER_UPDATE_SUCCESS,\r\n        })\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS, payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}","import React, {useState} from 'react'\r\nimport {Form, Button} from 'react-bootstrap'\r\n\r\nconst SearchBox = ({history}) => {\r\n    const [keyword, setKeyword] = useState('')\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if(keyword.trim()) {\r\n            history.push(`/search/${keyword}`)\r\n        } else {\r\n            history.push('/')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Form onSubmit={submitHandler} inline>\r\n            <Form.Control type='text' name='q' onChange={(e) => setKeyword(e.target.value)} placeholder='Search Products...' className='mr-sm-2 ml-sm-5'></Form.Control>\r\n            <Button type='submit' variant='outline-success' className='p-2'>\r\n                Search\r\n            </Button>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default SearchBox\r\n","import React from 'react'\r\nimport {Route} from 'react-router-dom'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {LinkContainer} from 'react-router-bootstrap'\r\nimport {Container, Nav, Navbar, NavDropdown} from 'react-bootstrap'\r\nimport {logout} from '../actions/userActions'\r\nimport SearchBox from './SearchBox'\r\n\r\nconst Header = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const {userInfo} = userLogin\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout())\r\n    }\r\n    return (\r\n        <header>\r\n            <Navbar bg=\"dark\" variant='dark' expand=\"lg\" collapseOnSelect>\r\n                <Container>\r\n                    <LinkContainer to='/'>\r\n                        <Navbar.Brand>Onlineshop</Navbar.Brand>\r\n                    </LinkContainer>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Route render={({history}) => <SearchBox history={history}/ >} />\r\n                        <Nav className=\"ml-auto\">\r\n                            <LinkContainer to='/cart'>\r\n                                <Nav.Link><i className='fas fa-shopping-cart'></i>Cart</Nav.Link>\r\n                            </LinkContainer>\r\n                            {userInfo ? (\r\n                                <NavDropdown title={userInfo.name} id='username'>\r\n                                    <LinkContainer to='/profile'>\r\n                                        <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n                                    <NavDropdown.Item onClick={logoutHandler}>\r\n                                        Logout\r\n                                    </NavDropdown.Item>\r\n                                </NavDropdown>\r\n                            ) : (\r\n                            <LinkContainer to='/login'>\r\n                                <Nav.Link><i className='fas fa-user'></i>Sign In</Nav.Link>\r\n                            </LinkContainer>\r\n                            )}\r\n                            {userInfo && userInfo.isAdmin && (\r\n                               <NavDropdown title='Admin' id='adminmenu'>\r\n                               <LinkContainer to='/admin/userlist'>\r\n                                   <NavDropdown.Item>Users</NavDropdown.Item>\r\n                               </LinkContainer>\r\n                               <LinkContainer to='/admin/productlist'>\r\n                                   <NavDropdown.Item>Products</NavDropdown.Item>\r\n                               </LinkContainer>\r\n                               <LinkContainer to='/admin/orderlist'>\r\n                                   <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                               </LinkContainer>\r\n                           </NavDropdown> \r\n                            )}\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport {Container, Row, Col} from 'react-bootstrap'\r\n\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <Container>\r\n                <Row>\r\n                    <Col className='text-center py-3'>\r\n                        Copyright &copy; André Zorn\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\n\r\nconst Rating = ({value, text, color}) => {\r\n    return (\r\n        <div className='rating'>\r\n            <span>\r\n                <i style={{color}} className={value >= 1 ? 'fas fa-star' : value >= 0.5 ? 'fas fa-star-half-alt' : 'far fa-star'}></i>\r\n            </span>\r\n            <span>\r\n                <i style={{color}} className={value >= 2 ? 'fas fa-star' : value >= 1.5 ? 'fas fa-star-half-alt' : 'far fa-star'}></i>\r\n            </span>\r\n            <span>\r\n                <i style={{color}} className={value >= 3 ? 'fas fa-star' : value >= 2.5 ? 'fas fa-star-half-alt' : 'far fa-star'}></i>\r\n            </span>\r\n            <span>\r\n                <i style={{color}} className={value >= 4 ? 'fas fa-star' : value >= 3.5 ? 'fas fa-star-half-alt' : 'far fa-star'}></i>\r\n            </span>\r\n            <span>\r\n                <i style={{color}} className={value >= 5 ? 'fas fa-star' : value >= 4.5 ? 'fas fa-star-half-alt' : 'far fa-star'}></i>\r\n            </span>\r\n            <span>{text && text}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nRating.defaultProps = {\r\n    color: '#f8e825'\r\n}\r\n\r\nexport default Rating\r\n","import React from 'react'\r\nimport { Card } from 'react-bootstrap'\r\nimport {Link} from 'react-router-dom'\r\nimport Rating from './Rating'\r\n\r\nconst Product = ({product}) => {\r\n    return (\r\n        <Card className='my-3 p-3 rounded'>\r\n            <Link to={`/product/${product._id}`}>\r\n                <Card.Img src={product.image} variant='top' />\r\n            </Link>\r\n            <Card.Body>\r\n            <Link to={`/product/${product._id}`}>\r\n                <Card.Title  as='div'><strong>{product.name}</strong></Card.Title>\r\n            </Link>\r\n            <Card.Text as ='div'>\r\n                <Rating value={product.rating} text={`${product.numReviews} reviews`} />\r\n            </Card.Text>\r\n            <Card.Text as='h3'>${product.price}</Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Product\r\n","import React from 'react'\r\nimport {Spinner} from 'react-bootstrap'\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <Spinner animation='border' role='status' style={{width:'100px', height:'100px', margin: 'auto', display: 'block'}}>\r\n            <span className='sr-only'>Loading...</span>\r\n        </Spinner>\r\n    )\r\n}\r\n\r\nexport default Loader\r\n","import React from 'react'\r\nimport {Alert} from 'react-bootstrap'\r\n\r\nconst Message = ({variant, children}) => {\r\n    return (\r\n        <Alert variant={variant}>\r\n            {children}\r\n        </Alert>\r\n    )\r\n}\r\n\r\nMessage.defaultProps = {\r\n    variant: 'info'\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport {Pagination} from 'react-bootstrap'\r\nimport {LinkContainer} from 'react-router-bootstrap'\r\n\r\nconst Paginate = ({pages, page, isAdmin = false, keyword = ''}) => {\r\n    return pages > 1 && (\r\n        <Pagination>\r\n            {[...Array(pages).keys()].map(x => (\r\n                <LinkContainer key={x+1} to={!isAdmin ? (keyword ? (`/search/${keyword}/page/${x+1}`) : (`/page/${x+1}`)) : (`/admin/productlist/${x+1}`)}>\r\n                    <Pagination.Item active={x+1 === page}>\r\n                        {x + 1}\r\n                    </Pagination.Item>\r\n                </LinkContainer>\r\n            ))}\r\n        </Pagination>\r\n    )\r\n}\r\n\r\nexport default Paginate\r\n","import axios from 'axios'\r\nimport {PRODUCT_LIST_FAIL, PRODUCT_LIST_SUCCESS, PRODUCT_LIST_REQUEST, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_DETAILS_FAIL, PRODUCT_DELETE_REQUEST, PRODUCT_DELETE_SUCCESS, PRODUCT_DELETE_FAIL, PRODUCT_CREATE_REQUEST, PRODUCT_CREATE_SUCCESS, PRODUCT_CREATE_FAIL, PRODUCT_UPDATE_REQUEST, PRODUCT_UPDATE_SUCCESS, PRODUCT_UPDATE_FAIL, PRODUCT_CREATE_REVIEW_REQUEST, PRODUCT_CREATE_REVIEW_SUCCESS, PRODUCT_CREATE_REVIEW_FAIL, PRODUCT_TOP_REQUEST, PRODUCT_TOP_SUCCESS, PRODUCT_TOP_FAIL} from '../constants/productConstants'\r\n\r\nexport const listProducts = (keyword = '', pageNumber = '') => async (dispatch) => {\r\n    try {\r\n        dispatch({type: PRODUCT_LIST_REQUEST})\r\n\r\n        const {data} = await axios.get(`/api/products?keyword=${keyword}&pageNumber=${pageNumber}`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_LIST_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({type: PRODUCT_DETAILS_REQUEST})\r\n\r\n        const {data} = await axios.get(`/api/products/${id}`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n      \r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        }\r\n        \r\n        await axios.delete(`/api/products/${id}`, config)\r\n        \r\n        dispatch({\r\n            type: PRODUCT_DELETE_SUCCESS\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n      \r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        }\r\n        \r\n        const {data} = await axios.post(`/api/products`, {}, config)\r\n        \r\n        dispatch({\r\n            type: PRODUCT_CREATE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n      \r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        }\r\n        \r\n        const {data} = await axios.put(`/api/products/${product._id}`, product, config)\r\n        \r\n        dispatch({\r\n            type: PRODUCT_UPDATE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n      \r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        }\r\n        \r\n        await axios.post(`/api/products/${productId}/reviews`, review, config)\r\n        \r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_SUCCESS,\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const listTopProducts = () => async (dispatch) => {\r\n    try {\r\n        dispatch({type: PRODUCT_TOP_REQUEST})\r\n\r\n        const {data} = await axios.get('/api/products/top')\r\n\r\n        dispatch({\r\n            type: PRODUCT_TOP_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_TOP_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}","import React, {useEffect} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {Link} from 'react-router-dom'\r\nimport {Carousel, Image} from 'react-bootstrap'\r\nimport Loader from './Loader'\r\nimport Message from './Message'\r\nimport {listTopProducts} from '../actions/productActions'\r\n\r\nconst ProductCarousel = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const productTopRated = useSelector(state => state.productTopRated)\r\n    const {loading, error, products} = productTopRated\r\n\r\n    useEffect(() => {\r\n        dispatch(listTopProducts())\r\n    }, [dispatch])\r\n\r\n    return loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\r\n        <Carousel pause='hover' className='bg-dark'>\r\n           {products.map((product) => (\r\n                <Carousel.Item key={product._id}>\r\n                    <Link to={`/product/${product._id}`}>\r\n                        <Image src={product.image} alt={product.name} fluid />\r\n                        <Carousel.Caption className='carousel-caption'>\r\n                            <h2>{product.name} (${product.price})</h2>\r\n                        </Carousel.Caption>\r\n                    </Link>\r\n                </Carousel.Item>\r\n            ))}\r\n        </Carousel>\r\n    )\r\n}\r\n\r\nexport default ProductCarousel\r\n","import React from 'react'\r\nimport { Helmet } from 'react-helmet'\r\n\r\nconst Meta = ({ title, description, keywords }) => {\r\n  return (\r\n    <Helmet>\r\n      <title>{title}</title>\r\n      <meta name='description' content={description} />\r\n      <meta name='keyword' content={keywords} />\r\n    </Helmet>\r\n  )\r\n}\r\n\r\nMeta.defaultProps = {\r\n  title: 'Welcome To My Onlineshop',\r\n  description: 'We sell the best products for cheap',\r\n  keywords: 'electronics, buy electronics, cheap electroincs',\r\n}\r\n\r\nexport default Meta","import React, {useEffect} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {Row, Col} from 'react-bootstrap'\r\nimport Product from '../components/Product'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport Paginate from '../components/Paginate'\r\nimport ProductCarousel from '../components/ProductCarousel'\r\nimport Meta from '../components/Meta'\r\nimport {listProducts} from '../actions/productActions'\r\n\r\nconst Homescreen = ({match}) => {\r\n    const keyword = match.params.keyword\r\n\r\n    const pageNumber = match.params.pageNumber || 1\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productList = useSelector(state => state.productList)\r\n    const {loading, error, products, pages, page} = productList\r\n\r\n    useEffect(() => {\r\n        dispatch(listProducts(keyword, pageNumber))\r\n    }, [dispatch, keyword, pageNumber])\r\n\r\n    return (\r\n        <>\r\n            <Meta />\r\n            {!keyword ? <ProductCarousel /> : <Link to='/' className='btn btn-light'>Go Back</Link>}\r\n            <h1>Latest Products</h1>\r\n            {loading ? \r\n                <Loader />\r\n                : error ? \r\n                (<Message variant='danger'>{error}</Message>) : (\r\n                    <>\r\n                    <Row>\r\n                        {products.map(product => (\r\n                            <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                                <Product product={product} />\r\n                            </Col>\r\n                            ))}\r\n                    </Row>\r\n                    <Paginate page={page} pages={pages} keyword={keyword ? keyword : ''} />\r\n                    </>\r\n                )\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Homescreen\r\n","import React, {useState, useEffect} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {Form, Row, Col, Image, ListGroup, Card, Button } from 'react-bootstrap'\r\nimport Rating from '../components/Rating'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport Meta from '../components/Meta'\r\nimport {listProductDetails, createProductReview} from '../actions/productActions'\r\nimport {PRODUCT_CREATE_REVIEW_RESET} from '../constants/productConstants'\r\n\r\nconst Productscreen = ({history, match}) => {\r\n    const [qty, setQty] = useState(1)\r\n    const [rating, setRating] = useState(0)\r\n    const [comment, setComment] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const {loading, error, product} = productDetails\r\n    \r\n    const productReviewCreate = useSelector(state => state.productReviewCreate)\r\n    const {success: successProductReview, error: errorProductReview} = productReviewCreate\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const {userInfo} = userLogin\r\n\r\n    useEffect(() => {\r\n        if(successProductReview) {\r\n            alert('Review Submitted!')\r\n            setRating(0)\r\n            setComment('')\r\n            dispatch({type: PRODUCT_CREATE_REVIEW_RESET})\r\n        }\r\n        dispatch(listProductDetails(match.params.id))\r\n    }, [dispatch, match, successProductReview])\r\n\r\n    const addToCartHandler = () => {\r\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(createProductReview(match.params.id, {rating, comment}))\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <Link className='btn btn-dark my3' to='/'>Go Back</Link>\r\n        {loading ? <Loader /> : error ? (<Message varaint='danger'>{error}</Message>) : (\r\n            <>\r\n            <Meta title={product.name} />\r\n            <Row>\r\n            <Col md={6}>\r\n                <Image src={product.image} alt={product.name} fluid/>\r\n            </Col>\r\n            <Col md={3}>\r\n                <ListGroup variant='flush'>\r\n                    <ListGroup.Item>\r\n                        <h3>{product.name}</h3>\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                        <Rating value={product.rating} text={`${product.numReviews} reviews`} /> \r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                        Price: $ {product.price}\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                        Description: {product.description}\r\n                    </ListGroup.Item>\r\n                </ListGroup>\r\n            </Col>\r\n            <Col md={3}>\r\n                <Card>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>\r\n                                    Price:\r\n                                </Col>\r\n                                <Col>\r\n                                    <strong>$ {product.price}</strong>\r\n                                </Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>\r\n                                    Status:\r\n                                </Col>\r\n                                <Col>\r\n                                    {product.countInStock > 0 ? 'Product available' : 'Product out of stock'}\r\n                                </Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n                        {product.countInStock > 0 && (\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>\r\n                                        Qty\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <Form.Control as='select' value={qty} onChange={(e) => setQty(e.target.value)}>\r\n                                            {[...Array(product.countInStock).keys()].map(x => (\r\n                                                <option key={x+1} value={x+1}>\r\n                                                    {x+1}\r\n                                                </option>\r\n                                            ))}\r\n                                        </Form.Control>\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                        )}\r\n                        <ListGroup.Item>\r\n                            <Button onClick={addToCartHandler} className='btn-block' type='button' disabled={product.countInStock === 0}>Add To Cart</Button>\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n        <Row>\r\n            <Col md={6}>\r\n                <h2>Reviews</h2>\r\n                {product.reviews.length === 0 && <Message>No Reviews</Message>}\r\n                <ListGroup variant='flush'>\r\n                    {product.reviews.map(review =>\r\n                        <ListGroup.Item key={review._id}>\r\n                            <strong>{review.name}</strong>\r\n                            <Rating value={review.rating} />\r\n                            <p>{review.createdAt.substring(0 ,10)}</p>\r\n                            <p>{review.comment}</p>\r\n                        </ListGroup.Item>\r\n                    )}\r\n                    <ListGroup.Item>\r\n                        <h2>Write a Customer Review</h2>\r\n                        {errorProductReview && <Message variant='danger'>{errorProductReview}</Message>}\r\n                        {userInfo ? (\r\n                            <Form onSubmit={submitHandler}>\r\n                                <Form.Group controlId='rating'>\r\n                                    <Form.Label>Rating</Form.Label>\r\n                                    <Form.Control as='select' value={rating} onChange={(e) => {setRating(e.target.value)}}>\r\n                                        <option value=''>Select...</option>\r\n                                        <option value='1'>1 - Poor</option>\r\n                                        <option value='2'>2 - Fair</option>\r\n                                        <option value='3'>3 - Good</option>\r\n                                        <option value='4'>4 - Very Good</option>\r\n                                        <option value='5'>5 - Excellent</option>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                                <Form.Group controlId='control'>\r\n                                    <Form.Label>\r\n                                        Comment\r\n                                    </Form.Label>\r\n                                    <Form.Control as='textarea' row='3' value={comment} onChange={(e) => {setComment(e.target.value)}}></Form.Control>\r\n                                </Form.Group>\r\n                                <Button type='submit' variant='primary'>\r\n                                    Submit\r\n                                </Button>\r\n                            </Form>\r\n                        ) : (\r\n                        <Message>Please <Link to={'/login'}>sign in</Link> to write a review</Message>\r\n                        )}\r\n                    </ListGroup.Item>\r\n                </ListGroup>\r\n            </Col>\r\n        </Row>\r\n        </>\r\n        )}\r\n        \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Productscreen\r\n","import axios from 'axios'\r\nimport {CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_SHIPPING_ADDRESS, CART_SAVE_PAYMENT_METHOD} from '../constants/cartConstants'\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n    const {data} = await axios.get(`/api/products/${id}`)\r\n\r\n    dispatch({\r\n        type: CART_ADD_ITEM,\r\n        payload: {\r\n            product: data._id,\r\n            name: data.name,\r\n            image: data.image,\r\n            price: data.price,\r\n            countInStock: data.countInStock,\r\n            qty\r\n        }\r\n    })\r\n    \r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n    dispatch({\r\n        type: CART_REMOVE_ITEM,\r\n        payload: id\r\n    })\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const saveShippingAddress = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_SHIPPING_ADDRESS,\r\n        payload: data\r\n    })\r\n\r\n    localStorage.setItem('shippingAddress', JSON.stringify(data))\r\n}\r\n\r\nexport const savePaymentMethod = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_PAYMENT_METHOD,\r\n        payload: data\r\n    })\r\n\r\n    localStorage.setItem('paymentMethod', JSON.stringify(data))\r\n}","import React, {useEffect} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {Row, Col, Image, Form, Button, ListGroup, Card} from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport {addToCart, removeFromCart} from '../actions/cartActions'\r\n\r\nconst CartScreen = ({match, location, history}) => {\r\n    const productId = match.params.id\r\n\r\n    const qty = location.search ? Number(location.search.split('=')[1]): 1\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const {cartItems} = cart\r\n\r\n    useEffect(() => {\r\n        if(productId){\r\n            dispatch(addToCart(productId, qty))\r\n        }\r\n    }, [dispatch, productId, qty])\r\n\r\n    const removeFromCartHandler = (id) => {\r\n        dispatch(removeFromCart(id))\r\n    }\r\n\r\n    const checkoutHandler = () => {\r\n       history.push('/login?redirect=shipping')\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={8}>\r\n                <h1>Shopping Cart</h1>\r\n                {cartItems.length === 0 ? (\r\n                <Message>Your Cart is empty <Link to='/'>Go back</Link></Message>\r\n                ) : (\r\n                    <ListGroup variant='flush'>\r\n                        {cartItems.map(item => (<ListGroup.Item key={item.product}>\r\n                                <Row>\r\n                                    <Col md={2}>\r\n                                        <Image src={item.image} alt={item.name} fluid rounded />\r\n                                    </Col>\r\n                                    <Col md={3}>\r\n                                        <Link to={`/api/product/${item.product}`} >{item.name}</Link>\r\n                                    </Col>\r\n                                    <Col md={2}>\r\n                                        ${item.price}\r\n                                    </Col>\r\n                                    <Col md={2}>\r\n                                        <Form.Control as='select' value={item.qty} onChange={(e) => dispatch(addToCart(item.product, Number(e.target.value)))}>\r\n                                            {[...Array(item.countInStock).keys()].map(x => (\r\n                                                <option key={x+1} value={x+1}>\r\n                                                    {x+1}\r\n                                                </option>\r\n                                            ))}\r\n                                        </Form.Control>\r\n                                    </Col>\r\n                                    <Col md={2}>\r\n                                        <Button\r\n                                        type='button'\r\n                                        variant='light'\r\n                                        onClick={() => removeFromCartHandler(item.product)}\r\n                                        >\r\n                                        <i className='fas fa-trash'></i>\r\n                                        </Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>  \r\n                        ))}  \r\n                    </ListGroup>\r\n                ) }\r\n            </Col>\r\n            <Col md={4}>\r\n                <Card>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>\r\n                                Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)}) items\r\n                            </h2>\r\n                            $ {cartItems.reduce((acc, item) => acc + item.qty * item.price, 0).toFixed(2)}\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Button type='button' className='btn-block' disabled={cartItems.length === 0} onClick={checkoutHandler} >\r\n                                Proceed to checkout\r\n                            </Button>\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default CartScreen\r\n","import React from 'react'\r\nimport {Container, Row, Col} from 'react-bootstrap'\r\n\r\nconst FormContainer = ({children}) => {\r\n    return (\r\n        <Container>\r\n            <Row className='justify-content-md-center'>\r\n                <Col xs={12} md={6}>\r\n                    {children}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default FormContainer\r\n","import React, {useState, useEffect} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {Form, Button, Row, Col} from 'react-bootstrap'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport {login} from '../actions/userActions'\r\n\r\nconst LoginScreen = ({location, history}) => {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const {loading, error, userInfo} = userLogin\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    useEffect(() => {\r\n        if(userInfo) {\r\n        history.push(redirect)\r\n        }\r\n    }, [history, redirect, userInfo])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(login(email, password))\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign In</h1>\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control type='email' placeholder='Enter your email address' value={email} onChange={(e) => setEmail(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control type='password' placeholder='Enter your password' value={password} onChange={(e) => setPassword(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n                <Button type='submit' variant='primary'>\r\n                    Sign In\r\n                </Button>\r\n            </Form> \r\n            <Row className='py-3'>\r\n                <Col>\r\n                    New Customer? {''} <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>Register here</Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default LoginScreen\r\n","import React, {useState, useEffect} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {Form, Button, Row, Col} from 'react-bootstrap'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport {register} from '../actions/userActions'\r\n\r\nconst RegisterScreen = ({location, history}) => {\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState(null)\r\n\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userRegister = useSelector(state => state.userRegister)\r\n    const {loading, error, userInfo} = userRegister\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    useEffect(() => {\r\n        if(userInfo) {\r\n        history.push(redirect)\r\n        }\r\n    }, [history, redirect, userInfo])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        \r\n        if(password !== confirmPassword) {\r\n            setMessage('Password do not match!')\r\n        } else {\r\n            dispatch(register(name, email, password))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign In</h1>\r\n            {message && <Message variant='danger'>{message}</Message>}\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control type='name' placeholder='Enter your name' value={name} onChange={(e) => setName(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control type='email' placeholder='Enter your email address' value={email} onChange={(e) => setEmail(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control type='password' placeholder='Enter your password' value={password} onChange={(e) => setPassword(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='confirmPassword'>\r\n                    <Form.Label>Confirm Password</Form.Label>\r\n                    <Form.Control type='password' placeholder='Confirm password' value={confirmPassword} onChange={(e) => setConfirmPassword(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n                <Button type='submit' variant='primary'>\r\n                    Sign In\r\n                </Button>\r\n            </Form> \r\n            <Row className='py-3'>\r\n                <Col>\r\n                    Have an Account? {''} <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>Login</Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default RegisterScreen\r\n","import React, {useState, useEffect} from 'react'\r\nimport {Table, Button, Form, Row, Col} from 'react-bootstrap'\r\nimport {LinkContainer} from 'react-router-bootstrap'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport {getUserProfile, updateUserProfile} from '../actions/userActions'\r\nimport {listMyOrders} from '../actions/orderActions'\r\nimport {USER_UPDATE_PROFILE_RESET} from '../constants/userConstants'\r\n\r\nconst RegisterScreen = ({location, history}) => {\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState(null)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const {loading, error, user} = userDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const {userInfo} = userLogin\r\n\r\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n    const {success} = userUpdateProfile\r\n\r\n    const orderListMy = useSelector(state => state.orderListMy)\r\n    const {loading: loadingOrders, error: errorOrders, orders} = orderListMy\r\n\r\n    \r\n    useEffect(() => {\r\n        if(!userInfo) {\r\n        history.push('/')\r\n        } else {\r\n            if (!user || !user.name || success){\r\n                dispatch({type: USER_UPDATE_PROFILE_RESET})\r\n                dispatch(getUserProfile('profile'))\r\n                dispatch(listMyOrders())\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n            }\r\n        }\r\n    }, [dispatch, history, userInfo, user, success])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        \r\n        if(password !== confirmPassword) {\r\n            setMessage('Password do not match!')\r\n        } else {\r\n            dispatch(updateUserProfile({id: user._id, name, email, password}))\r\n        }\r\n    }\r\n    return (\r\n        <Row>\r\n            <Col md={3}>\r\n            <h2>USer Profile</h2>\r\n            {message && <Message variant='danger'>{message}</Message>}\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {success && <Message variant='success'>Profile updated!</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control type='name' placeholder='Enter your name' value={name} onChange={(e) => setName(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control type='email' placeholder='Enter your email address' value={email} onChange={(e) => setEmail(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control type='password' placeholder='Enter your password' value={password} onChange={(e) => setPassword(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='confirmPassword'>\r\n                    <Form.Label>Confirm Password</Form.Label>\r\n                    <Form.Control type='password' placeholder='Confirm password' value={confirmPassword} onChange={(e) => setConfirmPassword(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n                <Button type='submit' variant='primary'>\r\n                    Update\r\n                </Button>\r\n            </Form> \r\n            </Col>\r\n            <Col md={9}>\r\n                <h2>My Orders</h2>\r\n                {loadingOrders ? <Loader /> : errorOrders ? <Message variant='danger'>{errorOrders}</Message> :(\r\n                    <Table striped bordered hover responsive className='table-sm'>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>DATE</th>\r\n                                <th>TOTAL</th>\r\n                                <th>PAID</th>\r\n                                <th>DELIVERED</th>\r\n                                <th>Details</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {orders.map((order) => (\r\n                                <tr key={order._id}>\r\n                                    <td>{order._id}</td>\r\n                                    <td>{order.createdAt.substring(0, 10)}</td>\r\n                                    <td>{order.totalPrice}</td>\r\n                                    <td>\r\n                                        {order.isPaid ? (\r\n                                            order.paidAt.substring(0, 10)) : (\r\n                                            <i className='fas fa-times' style={{color: 'red'}}></i>\r\n                                        )}\r\n                                    </td>\r\n                                    <td> \r\n                                        {order.isDelivered ? (\r\n                                            order.deliveredAt.substring(0, 10)) : (\r\n                                            <i className='fas fa-times' style={{color: 'red'}}></i>\r\n                                        )}\r\n                                    </td>\r\n                                    <td>\r\n                                        <LinkContainer to={`/order/${order._id}`}>\r\n                                            <Button className='btn-sm' variant='light'>\r\n                                                Details\r\n                                            </Button>\r\n                                        </LinkContainer>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n                )}\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default RegisterScreen\r\n\r\n","import axios from 'axios'\r\nimport {ORDER_CREATE_FAIL, ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_DELIVER_FAIL, ORDER_DELIVER_REQUEST, ORDER_DELIVER_SUCCESS, ORDER_DETAILS_FAIL, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_LIST_FAIL, ORDER_LIST_MY_FAIL, ORDER_LIST_MY_REQUEST, ORDER_LIST_MY_SUCCESS, ORDER_LIST_REQUEST, ORDER_LIST_SUCCESS, ORDER_PAY_FAIL, ORDER_PAY_REQUEST, ORDER_PAY_SUCCESS} from '../constants/orderConstants'\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_CREATE_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n      \r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        }\r\n        \r\n        const {data} = await axios.post('/api/orders', order, config)\r\n      \r\n        dispatch({\r\n            type: ORDER_CREATE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_CREATE_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DETAILS_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n      \r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        }\r\n        \r\n        const {data} = await axios.get(`/api/orders/${id}`, config)\r\n      \r\n        dispatch({\r\n            type: ORDER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const payOrder = (orderId, paymentResult) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_PAY_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n      \r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        }\r\n        \r\n        const {data} = await axios.put(`/api/orders/${orderId}/pay`, paymentResult, config)\r\n      \r\n        dispatch({\r\n            type: ORDER_PAY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_PAY_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const deliverOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DELIVER_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n      \r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        }\r\n        \r\n        const {data} = await axios.put(`/api/orders/${order._id}/deliver`, {}, config)\r\n      \r\n        dispatch({\r\n            type: ORDER_DELIVER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DELIVER_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n      \r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        }\r\n        \r\n        const {data} = await axios.get(`/api/orders/myorders`, config)\r\n        \r\n        dispatch({\r\n            type: ORDER_LIST_MY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n      \r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        }\r\n        \r\n        const {data} = await axios.get(`/api/orders`, config)\r\n        \r\n        dispatch({\r\n            type: ORDER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport {Nav} from 'react-bootstrap'\r\nimport {LinkContainer} from 'react-router-bootstrap'\r\n\r\nconst CheckoutSteps = ({step1, step2, step3, step4}) => {\r\n    return (\r\n        <Nav className='justify-content-center mb-4'>\r\n            <Nav.Item>\r\n                {step1 ? (\r\n                    <LinkContainer to='/login'>\r\n                        <Nav.Link>Sign In</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                    <Nav.Link disabled>Sign In</Nav.Link>\r\n                )}\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n                {step2 ? (\r\n                    <LinkContainer to='/shipping'>\r\n                        <Nav.Link>Shipping</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                    <Nav.Link disabled>Shipping</Nav.Link>\r\n                )}\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n                {step3 ? (\r\n                    <LinkContainer to='//payment'>\r\n                        <Nav.Link>Payment</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                    <Nav.Link disabled>Payment</Nav.Link>\r\n                )}\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n                {step4 ? (\r\n                    <LinkContainer to='/placeorder'>\r\n                        <Nav.Link>Place Order</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                    <Nav.Link disabled>Place Order</Nav.Link>\r\n                )}\r\n            </Nav.Item>\r\n        </Nav>\r\n    )\r\n}\r\n\r\nexport default CheckoutSteps\r\n","import React, {useState} from 'react'\r\nimport {Form, Button} from 'react-bootstrap'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport {saveShippingAddress} from '../actions/cartActions'\r\n\r\nconst ShippingScreen = ({history}) => {\r\n    const cart = useSelector(state => state.cart)\r\n    const {shippingAddress} = cart\r\n\r\n    const [address, setAddress] = useState(shippingAddress.address)\r\n    const [city, setCity] = useState(shippingAddress.city)\r\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\r\n    const [country, setCountry] = useState(shippingAddress.country)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(saveShippingAddress({address, city, postalCode, country}))\r\n        history.push('/payment')\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 />\r\n            <h1>Shipping</h1>\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='address'>\r\n                    <Form.Label>Address</Form.Label>\r\n                    <Form.Control required type='text' placeholder='Enter your address' value={address} onChange={(e) => setAddress(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='city'>\r\n                    <Form.Label>City</Form.Label>\r\n                    <Form.Control required type='text' placeholder='Enter your city' value={city} onChange={(e) => setCity(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='postalCode'>\r\n                    <Form.Label>Postal Code</Form.Label>\r\n                    <Form.Control required type='text' placeholder='Enter your postal code' value={postalCode} onChange={(e) => setPostalCode(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='country'>\r\n                    <Form.Label>Country</Form.Label>\r\n                    <Form.Control required type='text' placeholder='Enter your country' value={country} onChange={(e) => setCountry(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n                <Button type='submit' variant='primary'>Continue</Button>\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default ShippingScreen\r\n","import React, {useState} from 'react'\r\nimport {Form, Button, Col} from 'react-bootstrap'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport {savePaymentMethod} from '../actions/cartActions'\r\n\r\nconst PaymentScreen = ({history}) => {\r\n    const cart = useSelector(state => state.cart)\r\n    const {shippingAddress} = cart\r\n\r\n    if(!shippingAddress){\r\n        history.push('/shipping')\r\n    }\r\n\r\n    const [paymentMethod, setPaymentMethod] = useState('Paypal')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(savePaymentMethod(paymentMethod))\r\n        history.push('/placeorder')\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 step3 />\r\n            <h1>Payment Method</h1>\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group>\r\n                    <Form.Label as='legend'>Select Method</Form.Label>\r\n                    <Col>\r\n                        <Form.Check type='radio' label='Paypal or Credit Card' id='Paypal' name='paymentMethod' value='PayPal' checked onChange={(e) => setPaymentMethod(e.target.value)}>\r\n                        </Form.Check>\r\n                    </Col>\r\n                </Form.Group>\r\n                <Button type='submit' variant='primary'>Continue</Button>\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default PaymentScreen\r\n","import React, {useEffect} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {Button, Row, Col, ListGroup, Image, Card} from 'react-bootstrap'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport {createOrder} from '../actions/orderActions'\r\n\r\nconst PlaceOrderScreen = ({history}) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector((state) => state.cart)\r\n\r\n    const addDecimals = (num) => {\r\n        return (Math.round(num * 100) /100).toFixed(2)\r\n    }\r\n\r\n    cart.itemsPrice = cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\r\n\r\n    cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 50)\r\n\r\n    cart.taxPrice = addDecimals(Number((cart.itemsPrice * 0.19).toFixed(2)))\r\n\r\n    cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)).toFixed(2)\r\n\r\n    const orderCreate = useSelector((state) => state.orderCreate)\r\n    const {order, success, error} = orderCreate\r\n\r\n    const placeOrderHandler = (e) => {\r\n        dispatch(createOrder({\r\n            orderItems: cart.cartItems,\r\n            shippingAddress: cart.shippingAddress,\r\n            paymentMethod: cart.paymentMethod,\r\n            itemsPrice: cart.itemsPrice,\r\n            shippingPrice: cart.shippingPrice,\r\n            taxPrice: cart.taxPrice,\r\n            totalPrice: cart.totalPrice\r\n        })) \r\n    }\r\n\r\n    useEffect(() => {\r\n        if(success){\r\n         history.push(`/order/${order._id}`)\r\n        }\r\n    }, [history, success])\r\n\r\n    return (\r\n        <>\r\n            <CheckoutSteps step1 step2 step3 step4 />\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n                            <p>\r\n                                <strong>Address: </strong>\r\n                                {cart.shippingAddress.address},{' '}{cart.shippingAddress.city},\r\n                                {' '}{cart.shippingAddress.postalCode},\r\n                                {' '}{cart.shippingAddress.country}\r\n                            </p> \r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n                            <p>\r\n                                <strong>Method: </strong>\r\n                                {cart.paymentMethod}\r\n                            </p> \r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Order items</h2>\r\n                            {cart.cartItems.length === 0 ? <Message>Your cart is empty</Message> : (\r\n                                <ListGroup variant='flush'>\r\n                                {cart.cartItems.map((item, index) => (\r\n                                    <ListGroup.Item key={index}>\r\n                                        <Row>\r\n                                            <Col md={1}>\r\n                                                <Image src={item.image} alt={item.name} fluid rounded />\r\n                                            </Col>\r\n                                            <Col>\r\n                                                <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                            </Col>\r\n                                            <Col md={4}>\r\n                                                {item.qty} * ${item.price} = ${(item.qty * item.price).toFixed(2)}\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n                                ))}\r\n                                </ListGroup>\r\n                            )}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items</Col>\r\n                                    <Col>${cart.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping</Col>\r\n                                    <Col>${cart.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax (19%)</Col>\r\n                                    <Col>${cart.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total</Col>\r\n                                    <Col>${cart.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                {error && <Message variant='danger'>{error}</Message>}\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Button type='button' className='btn-block' disabled={cart.cartItems === 0} onClick={placeOrderHandler}>Place Order</Button>\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PlaceOrderScreen\r\n","import React, {useEffect} from 'react'\r\nimport {LinkContainer} from 'react-router-bootstrap'\r\nimport {Table, Button, Row, Col} from 'react-bootstrap'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport Paginate from '../components/Paginate'\r\nimport {listProducts, deleteProduct, createProduct} from '../actions/productActions'\r\nimport {PRODUCT_CREATE_RESET} from '../constants/productConstants'\r\n\r\nconst ProductListScreen = ({history, match}) => {\r\n    const pageNumber = match.params.pageNumber || 1\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productList = useSelector(state => state.productList)\r\n    const {loading, error, products, pages, page} = productList\r\n\r\n    const productDelete = useSelector(state => state.productDelete)\r\n    const {loading: loadingDelete, error: errorDelete, success: successDelete} = productDelete\r\n\r\n    const productCreate = useSelector(state => state.productCreate)\r\n    const {loading: loadingCreate, error: errorCreate, success: successCreate, product: createdProduct} = productCreate\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const {userInfo} = userLogin\r\n\r\n    useEffect(() => {\r\n        dispatch({type: PRODUCT_CREATE_RESET})\r\n\r\n        if(!userInfo.isAdmin) {\r\n            history.push('/login')\r\n        } \r\n        \r\n        if(successCreate) {\r\n            history.push(`/admin/product/${createdProduct._id}/edit`)\r\n        } else {\r\n            dispatch(listProducts('', pageNumber))  \r\n        }\r\n    }, [dispatch, history, userInfo, successDelete, successCreate, createdProduct, pageNumber])\r\n\r\n    const createProductHandler = () => {\r\n        dispatch(createProduct())    \r\n    }\r\n\r\n    const deletHandler = (id) => {\r\n        if(window.confirm('Are you sure you want to delete this Product?')){\r\n            dispatch(deleteProduct(id))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row className=\"align-items-center\">\r\n                <Col>\r\n                    <h1>Products</h1>\r\n                </Col>\r\n                <Col className='text-right'>\r\n                    <Button className='my-3' onClick={createProductHandler}>\r\n                        <i className='fas fa-plus' /> Create new Product\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n            {loadingDelete && <Loader />}\r\n            {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\r\n            {loadingCreate && <Loader />}\r\n            {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n            {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\r\n                <>\r\n                <Table striped bordered hover responsive className='table-sm'>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>BRAND</th>\r\n                            <th>NAME</th>\r\n                            <th>PRICE</th>\r\n                            <th>CATEGORY</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {products.map(product => (\r\n                            <tr key={product._id}>\r\n                                <td>{product._id}</td>\r\n                                <td>{product.brand}</td>\r\n                                <td>{product.name}</td>\r\n                                <td>$ {product.price}</td>\r\n                                <td>{product.category}</td>\r\n\r\n                                <td>\r\n                                    <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                                        <Button variant='light' className='btn-sm'>\r\n                                            <i className='fas fa-edit' />\r\n                                        </Button>\r\n                                    </LinkContainer>\r\n                                    <Button variant='danger' className='btn-sm' onClick={() => deletHandler(product._id)}>\r\n                                        <i className='fas fa-trash' />\r\n                                    </Button>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n                <Paginate pages={pages} page={page} isAdmin={true} />\r\n                </>\r\n            )}   \r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProductListScreen\r\n","import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link} from 'react-router-dom'\r\nimport {Form, Button} from 'react-bootstrap'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport {listProductDetails, updateProduct} from '../actions/productActions'\r\nimport {PRODUCT_UPDATE_RESET} from '../constants/productConstants'\r\n\r\nconst ProductEditScreen = ({match, history}) => {\r\n    const productId = match.params.id\r\n\r\n    const [name, setName] = useState('')\r\n    const [brand, setBrand] = useState('')\r\n    const [image, setImage] = useState('')\r\n    const [price, setPrice] = useState(0)\r\n    const [description, setDescription] = useState('')\r\n    const [countInStock, setCountInStock] = useState(0)\r\n    const [category, setCategory] = useState('')\r\n    const [uploading, setUploading] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const {loading, error, product} = productDetails\r\n\r\n    const productUpdate = useSelector(state => state.productUpdate)\r\n    const {loading: loadingUpdate, error: errorUpdate, success: successUpdate} = productUpdate\r\n\r\n    useEffect(() => {\r\n        if(successUpdate) {\r\n            dispatch({type: PRODUCT_UPDATE_RESET})\r\n            history.push('/admin/productlist')\r\n        } else {\r\n            if(!product.name || product._id !== productId) {\r\n                dispatch(listProductDetails(productId))\r\n                } else {\r\n                    setName(product.name)\r\n                    setBrand(product.brand)\r\n                    setPrice(product.price)\r\n                    setImage(product.image)\r\n                    setCategory(product.category)\r\n                    setDescription(product.description)\r\n                    setCountInStock(product.countInStock)\r\n                }\r\n        }  \r\n    }, [product, productId, dispatch, history, successUpdate])\r\n\r\n    const uploadFileHandler = async (e) => {\r\n        const file = e.target.files[0]\r\n        const formData = new FormData()\r\n        formData.append('image', file)\r\n        setUploading(true)\r\n    \r\n        try {\r\n          const config = {\r\n            headers: {\r\n              'Content-Type': 'multipart/form-data',\r\n            },\r\n          }\r\n    \r\n          const { data } = await axios.post('/api/upload', formData, config)\r\n\r\n          console.log(data)\r\n    \r\n          setImage(data)\r\n          setUploading(false)\r\n        } catch (error) {\r\n          console.error(error)\r\n          setUploading(false)\r\n        }\r\n      }\r\n    \r\n      const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateProduct({\r\n            _id: productId,\r\n            name,\r\n            brand,\r\n            category,\r\n            price,\r\n            description,\r\n            image,\r\n            countInStock\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Link to='/admin/productlist' className='btn btn-light my-3'>\r\n                Go Back\r\n            </Link>\r\n            <FormContainer>\r\n                <h1>Edit Product</h1>\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}  \r\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\r\n                    <Form onSubmit={submitHandler}>\r\n                    <Form.Group controlId='name'>\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control type='name' placeholder='Enter the name' value={name} onChange={(e) => setName(e.target.value)}></Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId='price'>\r\n                        <Form.Label>Price</Form.Label>\r\n                        <Form.Control type='number' placeholder='Enter the price' value={price} onChange={(e) => setPrice(e.target.value)}></Form.Control>\r\n                    </Form.Group>\r\n                     <Form.Group controlId='image'>\r\n                        <Form.Label>Image</Form.Label>\r\n                        <Form.Check type='text' placeholder='Enter the image url' value={image} onChange={(e) => setImage(e.target.value)}></Form.Check>\r\n                        <Form.File id='image-file' label='Choose file' custom onChange={uploadFileHandler}></Form.File>\r\n                        {uploading && <Loader />}\r\n                    </Form.Group> \r\n                    <Form.Group controlId='brand'>\r\n                        <Form.Label>Brand</Form.Label>\r\n                        <Form.Control type='text' placeholder='Enter the brand' value={brand} onChange={(e) => setBrand(e.target.value)}></Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId='category'>\r\n                        <Form.Label>Category</Form.Label>\r\n                        <Form.Control type='text' placeholder='Enter the category' value={category} onChange={(e) => setCategory(e.target.value)}></Form.Control>\r\n                    </Form.Group>        \r\n                    <Form.Group controlId='description'>\r\n                        <Form.Label>Description</Form.Label>\r\n                        <Form.Control type='text' placeholder='Enter the description' value={description} onChange={(e) => setDescription(e.target.value)}></Form.Control>\r\n                    </Form.Group>    \r\n                    <Form.Group controlId='countInStock'>\r\n                        <Form.Label>Count in Stock</Form.Label>\r\n                        <Form.Control type='number' placeholder='Enter the Count in Stock' value={countInStock} onChange={(e) => setCountInStock(e.target.value)}></Form.Control>\r\n                    </Form.Group>      \r\n                    <Button type='submit' variant='primary'>\r\n                        Update\r\n                    </Button>\r\n                </Form> \r\n                )}\r\n            </FormContainer>\r\n        </>  \r\n    )\r\n}\r\n\r\nexport default ProductEditScreen\r\n","import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {PayPalButton} from 'react-paypal-button-v2'\r\nimport {Link} from 'react-router-dom'\r\nimport {Button, Row, Col, ListGroup, Image, Card} from 'react-bootstrap'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport {getOrderDetails, payOrder, deliverOrder} from '../actions/orderActions'\r\nimport {ORDER_PAY_RESET, ORDER_DELIVER_RESET} from '../constants/orderConstants'\r\n\r\nconst OrderScreen = ({match, history}) => {\r\n    const orderId = match.params.id\r\n\r\n    const [sdkReady, setSdkReady] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const {userInfo} = userLogin\r\n\r\n    const orderDetails = useSelector((state) => state.orderDetails)\r\n    const {order, loading, error} = orderDetails\r\n\r\n    const orderPay = useSelector((state) => state.orderPay)\r\n    const {loading: loadingPay, success: successPay} = orderPay\r\n\r\n    const orderDeliver = useSelector((state) => state.orderDeliver)\r\n    const {loading: loadingDeliver, success: successDeliver} = orderDeliver\r\n\r\n    if(!loading) {\r\n    const addDecimals = (num) => {\r\n        return (Math.round(num * 100) /100).toFixed(2)\r\n    }\r\n\r\n    order.itemsPrice = addDecimals(order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2))\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(!userInfo) {\r\n            history.push('/login')\r\n        }\r\n\r\n        const addPayPalScript = async () => {\r\n            const {data: clientId} = await axios.get('/api/config/paypal')\r\n            const script = document.createElement('script')\r\n            script.type = 'text/javascript'\r\n            script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`\r\n            script.async = true\r\n            script.onload = () => {setSdkReady(true)}\r\n            document.body.appendChild(script)\r\n        }\r\n\r\n        if(!order || order._id !== orderId || successPay || successDeliver) {\r\n            dispatch({type: ORDER_PAY_RESET})\r\n            dispatch({type: ORDER_DELIVER_RESET})\r\n            dispatch(getOrderDetails(orderId))\r\n        } else if (!order.isPaid) {\r\n            addPayPalScript()\r\n        } else {\r\n            setSdkReady(true)\r\n        }\r\n    }, [dispatch, order, orderId, successPay, successDeliver])\r\n\r\n    const successPaymentHandler = (paymentResult) => {\r\n        dispatch(payOrder(orderId, paymentResult))\r\n    }\r\n\r\n    const deliverHandler = () => {\r\n        dispatch(deliverOrder(order))\r\n    }\r\n\r\n    return (\r\n        loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\r\n            <>\r\n            <h1>Order {order._id}</h1>\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n                            <p>\r\n                                <strong>Name: </strong>{order.user.name}\r\n                            </p>\r\n                            <p>\r\n                                <strong>Email: </strong><a href={`mailto:${order.user.email}`} >{order.user.email}</a>\r\n                            </p>\r\n                            <p>\r\n                                <strong>Address: </strong>\r\n                                {order.shippingAddress.address},{' '}{order.shippingAddress.city},\r\n                                {' '}{order.shippingAddress.postalCode},\r\n                                {' '}{order.shippingAddress.country}\r\n                            </p> \r\n                            {order.isDelivered ? <Message variant='success'> Delivered on {order.deliveredAt}</Message> : <Message variant='danger'>Not Delivered yet</Message>}\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n                            <p>\r\n                                <strong>Method: </strong>\r\n                                {order.paymentMethod}\r\n                            </p> \r\n                            {order.isPaid ? <Message variant='success'> Paid on {order.paidAt}</Message> : <Message variant='danger'>Not paid yet</Message>}\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Order items</h2>\r\n                            {order.orderItems.length === 0 ? <Message>Your order is empty</Message> : (\r\n                                <ListGroup variant='flush'>\r\n                                {order.orderItems.map((item, index) => (\r\n                                    <ListGroup.Item key={index}>\r\n                                        <Row>\r\n                                            <Col md={1}>\r\n                                                <Image src={item.image} alt={item.name} fluid rounded />\r\n                                            </Col>\r\n                                            <Col>\r\n                                                <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                            </Col>\r\n                                            <Col md={4}>\r\n                                                {item.qty} * ${item.price} = ${(item.qty * item.price).toFixed(2)}\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n                                ))}\r\n                                </ListGroup>\r\n                            )}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items</Col>\r\n                                    <Col>${order.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping</Col>\r\n                                    <Col>${order.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax (19%)</Col>\r\n                                    <Col>${order.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total</Col>\r\n                                    <Col>${order.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            {!order.isPaid && (\r\n                                <ListGroup.Item>\r\n                                    {loadingPay && <Loader />}\r\n                                    {!sdkReady ? (<Loader />) : (\r\n                                        <PayPalButton amount={order.totalPrice} onSuccess={successPaymentHandler} />\r\n                                    )}\r\n                                </ListGroup.Item>\r\n                            )}\r\n                            {loadingDeliver && <Loader />}\r\n                            {userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && (\r\n                                <ListGroup.Item>\r\n                                    <Button type='button' className='btn btn-block' onClick={deliverHandler}>\r\n                                        Mark as Delivered\r\n                                    </Button>\r\n                                </ListGroup.Item>\r\n                            )}\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n            </>\r\n        )\r\n    )\r\n}\r\n\r\nexport default OrderScreen\r\n","import React, {useEffect} from 'react'\r\nimport {LinkContainer} from 'react-router-bootstrap'\r\nimport {Table, Button} from 'react-bootstrap'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport {listOrders} from '../actions/orderActions'\r\n\r\nconst OrderListScreen = ({history}) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const orderList = useSelector(state => state.orderList)\r\n    const {loading, error, orders} = orderList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const {userInfo} = userLogin\r\n\r\n    useEffect(() => {\r\n        if(userInfo && userInfo.isAdmin) {\r\n            dispatch(listOrders())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n    }, [dispatch, history, userInfo])\r\n\r\n    return (\r\n        <>\r\n            <h1>Orders</h1>\r\n            {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\r\n                <Table striped bordered hover responsive className='table-sm'>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ORDER ID</th>\r\n                            <th>DATE</th>\r\n                            <th>USER ID</th>\r\n                            <th>USER NAME</th>\r\n                            <th>TOTAL PRICE</th>\r\n                            <th>PAID</th>\r\n                            <th>DELIVERED</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {orders.map(order => (\r\n                            <tr key={order._id}>\r\n                                <td>{order._id}</td>\r\n                                <td>{order.createdAt.substring(0, 10)}</td>\r\n                                <td>{order.user && order.user._id}</td>\r\n                                <td>{order.user && order.user.name}</td>\r\n                                <td>$ {order.totalPrice}</td>\r\n                                <td>{order.isPaid ? (\r\n                                    order.paidAt.substring(0, 10)\r\n                                ) : (\r\n                                    <i className='fas fa-times' style={{color: 'red'}} />\r\n                                )}</td>\r\n                                <td>{order.isDelivered ? (\r\n                                    order.deliveredAt.substring(0, 10)\r\n                                ) : (\r\n                                    <i className='fas fa-times' style={{color: 'red'}} />\r\n                                )}</td>\r\n                                <td>\r\n                                    <LinkContainer to={`/order/${order._id}`}>\r\n                                            <Button variant='light' className='btn-sm'>\r\n                                                Details\r\n                                            </Button>\r\n                                    </LinkContainer>\r\n                                </td> \r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n            )}    \r\n        </>\r\n    )\r\n}\r\n\r\nexport default OrderListScreen\r\n","import React, {useEffect} from 'react'\r\nimport {LinkContainer} from 'react-router-bootstrap'\r\nimport {Table, Button} from 'react-bootstrap'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport {listUsers, deleteUser} from '../actions/userActions'\r\n\r\nconst UserListScreen = ({history}) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const userList = useSelector(state => state.userList)\r\n    const {loading, error, users} = userList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const {userInfo} = userLogin\r\n\r\n    const userDelete = useSelector(state => state.userDelete)\r\n    const {success: successDelete} = userDelete\r\n\r\n    useEffect(() => {\r\n        if(userInfo && userInfo.isAdmin) {\r\n            dispatch(listUsers())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n    }, [dispatch, history, userInfo, successDelete])\r\n\r\n    const deletHandler = (id) => {\r\n        if(window.confirm('Are you sure you want to delete this User?')){\r\n            dispatch(deleteUser(id))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h1>Users</h1>\r\n            {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\r\n                <Table striped bordered hover responsive className='table-sm'>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>NAME</th>\r\n                            <th>EMAIL</th>\r\n                            <th>ADMIN</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {users.map(user => (\r\n                            <tr key={user._id}>\r\n                                <td>{user._id}</td>\r\n                                <td>{user.name}</td>\r\n                                <td><a href={`mailto:${user.email}`}>{user.email}</a></td>\r\n                                <td>{user.isAdmin ? (\r\n                                    <i className='fas fa-check' style={{color: 'green'}} />\r\n                                ) : (\r\n                                    <i className='fas fa-times' style={{color: 'red'}} />\r\n                                )}</td>\r\n                                <td>\r\n                                    <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                                        <Button variant='light' className='btn-sm'>\r\n                                            <i className='fas fa-edit' />\r\n                                        </Button>\r\n                                    </LinkContainer>\r\n                                    <Button variant='danger' className='btn-sm' onClick={() => deletHandler(user._id)}>\r\n                                        <i className='fas fa-trash' />\r\n                                    </Button>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n            )}\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default UserListScreen\r\n","import React, {useState, useEffect} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {Form, Button} from 'react-bootstrap'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport {getUserProfile, updateUser} from '../actions/userActions'\r\nimport {USER_UPDATE_RESET} from '../constants/userConstants'\r\n\r\nconst UserEditScreen = ({match, history}) => {\r\n    const userId = match.params.id\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [isAdmin, setIsAdmin] = useState(false)\r\n\r\n    /* If you want to change passwords, you'll need this\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')*/\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const {loading, error, user} = userDetails\r\n\r\n    const userUpdate = useSelector(state => state.userUpdate)\r\n    const {loading: loadingUpdate, error: errorUpdate, success: successUpdate} = userUpdate\r\n\r\n    useEffect(() => {\r\n        if(successUpdate) {\r\n            dispatch({type :USER_UPDATE_RESET})\r\n            history.push('/admin/userlist')\r\n        } else {\r\n            if(!user.name || user._id !== userId) {\r\n                dispatch(getUserProfile(userId))\r\n               } else {\r\n                   setName(user.name)\r\n                   setEmail(user.email)\r\n                   setIsAdmin(user.isAdmin)\r\n               }\r\n        }\r\n    }, [user, userId, dispatch, history, successUpdate])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateUser({_id: userId, name, email, isAdmin}))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Link to='/admin/userlist' className='btn btn-light my-3'>\r\n                Go Back\r\n            </Link>\r\n            <FormContainer>\r\n                <h1>Edit User</h1>\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\r\n                    <Form onSubmit={submitHandler}>\r\n                    <Form.Group controlId='name'>\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control type='name' placeholder='Enter your name' value={name} onChange={(e) => setName(e.target.value)}></Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId='email'>\r\n                        <Form.Label>Email Address</Form.Label>\r\n                        <Form.Control type='email' placeholder='Enter your email address' value={email} onChange={(e) => setEmail(e.target.value)}></Form.Control>\r\n                    </Form.Group>\r\n                     <Form.Group controlId='isadmin'>\r\n                        <Form.Check type='checkbox' label='Is Admin' checked={isAdmin} onChange={(e) => setIsAdmin(e.target.checked)}></Form.Check>\r\n                    </Form.Group>                   \r\n                    <Button type='submit' variant='primary'>\r\n                        Update\r\n                    </Button>\r\n                </Form> \r\n                )}\r\n            </FormContainer>\r\n        </>  \r\n    )\r\n}\r\n\r\n/* If you want to change passwords too, add these Form.Groups\r\n <Form.Group controlId='password'>\r\n    <Form.Label>Password</Form.Label>\r\n    <Form.Control type='password' placeholder='Enter your password' value={password} onChange={(e) => setPassword(e.target.value)}></Form.Control>\r\n</Form.Group>\r\n<Form.Group controlId='confirmPassword'>\r\n    <Form.Label>Confirm Password</Form.Label>\r\n    <Form.Control type='password' placeholder='Confirm password' value={confirmPassword} onChange={(e) => setConfirmPassword(e.target.value)}></Form.Control>\r\n</Form.Group>   */\r\n\r\nexport default UserEditScreen\r\n","import {BrowserRouter as Router, Route} from 'react-router-dom'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport HomeScreen from './screens/HomeScreen'\nimport ProductScreen from './screens/Productscreen'\nimport CartScreen from './screens/CartScreen'\nimport LoginScreen from './screens/LoginScreen'\nimport RegisterScreen from './screens/RegisterScreen'\nimport ProfileScreen from './screens/ProfileScreen'\nimport ShippingScreen from './screens/ShippingScreen'\nimport PaymentScreen from './screens/PaymentScreen'\nimport PlaceOrderScreen from './screens/PlaceOrderScreen'\nimport ProductListScreen from './screens/ProductListScreen'\nimport ProductEditScreen from './screens/ProductEditScreen'\nimport OrderScreen from './screens/OrderScreen'\nimport OrderListScreen from './screens/OrderListScreen'\nimport UserListScreen from './screens/UserListScreen'\nimport UserEditScreen from './screens/UserEditScreen'\nimport {Container} from 'react-bootstrap'\n\n\nconst App = () => {\n  return (\n    <Router>\n      <Header />\n      <main className='py-3'>\n        <Container>\n        <Route path='/order/:id' component={OrderScreen} exact />\n        <Route path='/product/:id' component={ProductScreen} exact />\n        <Route path='/cart/:id?' component={CartScreen} />\n        <Route path='/shipping' component={ShippingScreen} exact />\n        <Route path='/placeorder' component={PlaceOrderScreen} exact />\n        <Route path='/payment' component={PaymentScreen} exact />\n        <Route path='/profile' component={ProfileScreen} />\n        <Route path='/login' component={LoginScreen} />\n        <Route path='/register' component={RegisterScreen} exact />\n        <Route path='/admin/userlist' component={UserListScreen} exact />\n        <Route path='/admin/orderlist' component={OrderListScreen} exact />\n        <Route path='/admin/user/:id/edit' component={UserEditScreen} exact />\n        <Route path='/admin/productlist' component={ProductListScreen} exact />\n        <Route path='/admin/productlist/:pageNumber' component={ProductListScreen} exact />\n        <Route path='/admin/product/:id/edit' component={ProductEditScreen} exact />\n        <Route path='/search/:keyword' component={HomeScreen} exact/>\n        <Route path='/page/:pageNumber' component={HomeScreen} exact/>\n        <Route path='/search/:keyword/page/:pageNumber' component={HomeScreen} exact/>\n        <Route path='/' component={HomeScreen} exact />\n        </Container>\n      </main>\n      <Footer />\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux'\nimport store from './store'\nimport './bootstrap.min.css'\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}